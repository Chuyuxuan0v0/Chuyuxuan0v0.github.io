<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHUYUXUAN</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.chuyuxuan.top/"/>
  <updated>2021-03-08T14:33:32.090Z</updated>
  <id>https://blog.chuyuxuan.top/</id>
  
  <author>
    <name>CHUYUXUAN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javascript正则表达式</title>
    <link href="https://blog.chuyuxuan.top/2021/03/08/%E5%89%8D%E7%AB%AF/javascript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://blog.chuyuxuan.top/2021/03/08/%E5%89%8D%E7%AB%AF/javascript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-03-08T04:48:29.000Z</published>
    <updated>2021-03-08T14:33:32.090Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="什么是正则表达式"><a class="markdownIt-Anchor" href="#什么是正则表达式"></a> 什么是正则表达式？</h2><blockquote><p>正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。</p></blockquote><p>一个正则表达式是一种从左到右匹配主体字符串的模式。<br>“Regular expression”这个词比较拗口，我们常使用缩写的术语“regex”或“regexp”。<br>正则表达式可以从一个基础字符串中根据一定的匹配模式替换文本中的字符串、验证表单、提取字符串等等。</p><p>想象你正在写一个应用，然后你想设定一个用户命名的规则，让用户名包含字符、数字、下划线和连字符，以及限制字符的个数，好让名字看起来没那么丑。<br>我们使用以下正则表达式来验证一个用户名：</p><p><br><br></p><p align="center">  <a href="https://gitee.com/Chuyuxuan/tuc/raw/master/20210308223301.png" data-fancybox="group" data-caption="Regular expression" class="fancybox"><img alt="Regular expression" title="Regular expression" data-src="https://gitee.com/Chuyuxuan/tuc/raw/master/20210308223301.png" class="lazyload"></a></p><p>以上的正则表达式可以接受 <code>john_doe</code>、<code>jo-hn_doe</code>、<code>john12_as</code>。<br>但不匹配<code>Jo</code>，因为它包含了大写的字母而且太短了。</p><h2 id="1-基本匹配"><a class="markdownIt-Anchor" href="#1-基本匹配"></a> 1. 基本匹配</h2><p>正则表达式其实就是在执行搜索时的格式，它由一些字母和数字组合而成。<br>例如：一个正则表达式 <code>the</code>，它表示一个规则：由字母<code>t</code>开始，接着是<code>h</code>，再接着是<code>e</code>。</p><pre>"the" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/dmRygT/1" target="_blank" rel="noopener">在线练习</a></p><p>正则表达式<code>123</code>匹配字符串<code>123</code>。它逐个字符的与输入的正则表达式做比较。</p><p>正则表达式是大小写敏感的，所以<code>The</code>不会匹配<code>the</code>。</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/1paXsy/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="2-元字符"><a class="markdownIt-Anchor" href="#2-元字符"></a> 2. 元字符</h2><p>正则表达式主要依赖于元字符。<br>元字符不代表他们本身的字面意思，他们都有特殊的含义。一些元字符写在方括号中的时候有一些特殊的意思。以下是一些元字符的介绍：</p><table><thead><tr><th style="text-align:center">元字符</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td>句号匹配任意单个字符除了换行符。</td></tr><tr><td style="text-align:center">[ ]</td><td>字符种类。匹配方括号内的任意字符。</td></tr><tr><td style="text-align:center">[^ ]</td><td>否定的字符种类。匹配除了方括号里的任意字符</td></tr><tr><td style="text-align:center">*</td><td>匹配&gt;=0个重复的在*号之前的字符。</td></tr><tr><td style="text-align:center">+</td><td>匹配&gt;=1个重复的+号前的字符。</td></tr><tr><td style="text-align:center">?</td><td>标记?之前的字符为可选.</td></tr><tr><td style="text-align:center">{n,m}</td><td>匹配num个大括号之前的字符或字符集 (n &lt;= num &lt;= m).</td></tr><tr><td style="text-align:center">(xyz)</td><td>字符集，匹配与 xyz 完全相等的字符串.</td></tr><tr><td style="text-align:center">|</td><td>或运算符，匹配符号前或后的字符.</td></tr><tr><td style="text-align:center">\</td><td>转义字符,用于匹配一些保留的字符 <code>[ ] ( ) { } . * + ? ^ $ \ |</code></td></tr><tr><td style="text-align:center">^</td><td>从开始行开始匹配.</td></tr><tr><td style="text-align:center">$</td><td>从末端开始匹配.</td></tr></tbody></table><h2 id="21-点运算符"><a class="markdownIt-Anchor" href="#21-点运算符"></a> 2.1 点运算符 <code>.</code></h2><p><code>.</code>是元字符中最简单的例子。<br><code>.</code>匹配任意单个字符，但不匹配换行符。<br>例如，表达式<code>.ar</code>匹配一个任意字符后面跟着是<code>a</code>和<code>r</code>的字符串。</p><pre>".ar" => The <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/xc9GkU/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="22-字符集"><a class="markdownIt-Anchor" href="#22-字符集"></a> 2.2 字符集</h2><p>字符集也叫做字符类。<br>方括号用来指定一个字符集。<br>在方括号中使用连字符来指定字符集的范围。<br>在方括号中的字符集不关心顺序。<br>例如，表达式<code>[Tt]he</code> 匹配 <code>the</code> 和 <code>The</code>。</p><pre>"[Tt]he" => <a href="#learn-regex"><strong>The</strong></a> car parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/2ITLQ4/1" target="_blank" rel="noopener">在线练习</a></p><p>方括号的句号就表示句号。<br>表达式 <code>ar[.]</code> 匹配 <code>ar.</code>字符串</p><pre>"ar[.]" => A garage is a good place to park a c<a href="#learn-regex"><strong>ar.</strong></a></pre><p><a href="https://regex101.com/r/wL3xtE/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="221-否定字符集"><a class="markdownIt-Anchor" href="#221-否定字符集"></a> 2.2.1 否定字符集</h3><p>一般来说 <code>^</code> 表示一个字符串的开头，但它用在一个方括号的开头的时候，它表示这个字符集是否定的。<br>例如，表达式<code>[^c]ar</code> 匹配一个后面跟着<code>ar</code>的除了<code>c</code>的任意字符。</p><pre>"[^c]ar" => The car <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/nNNlq3/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="23-重复次数"><a class="markdownIt-Anchor" href="#23-重复次数"></a> 2.3 重复次数</h2><p>后面跟着元字符 <code>+</code>，<code>*</code> or <code>?</code> 的，用来指定匹配子模式的次数。<br>这些元字符在不同的情况下有着不同的意思。</p><h3 id="231-号"><a class="markdownIt-Anchor" href="#231-号"></a> 2.3.1 <code>*</code> 号</h3><p><code>*</code>号匹配 在<code>*</code>之前的字符出现<code>大于等于0</code>次。<br>例如，表达式 <code>a*</code> 匹配0或更多个以a开头的字符。表达式<code>[a-z]*</code> 匹配一个行中所有以小写字母开头的字符串。</p><pre>"[a-z]*" => T<a href="#learn-regex"><strong>he</strong></a> <a href="#learn-regex"><strong>car</strong></a> <a href="#learn-regex"><strong>parked</strong></a> <a href="#learn-regex"><strong>in</strong></a> <a href="#learn-regex"><strong>the</strong></a> <a href="#learn-regex"><strong>garage</strong></a> #21.</pre><p><a href="https://regex101.com/r/7m8me5/1" target="_blank" rel="noopener">在线练习</a></p><p><code>*</code>字符和<code>.</code>字符搭配可以匹配所有的字符<code>.*</code>。<br><code>*</code>和表示匹配空格的符号<code>\s</code>连起来用，如表达式<code>\s*cat\s*</code>匹配0或更多个空格开头和0或更多个空格结尾的cat字符串。</p><pre>"\s*cat\s*" => The fat<a href="#learn-regex"><strong> cat </strong></a>sat on the con<a href="#learn-regex"><strong>cat</strong></a>enation.</pre><p><a href="https://regex101.com/r/gGrwuz/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="232-号"><a class="markdownIt-Anchor" href="#232-号"></a> 2.3.2 <code>+</code> 号</h3><p><code>+</code>号匹配<code>+</code>号之前的字符出现 &gt;=1 次。<br>例如表达式<code>c.+t</code> 匹配以首字母<code>c</code>开头以<code>t</code>结尾，中间跟着至少一个字符的字符串。</p><pre>"c.+t" => The fat <a href="#learn-regex"><strong>cat sat on the mat</strong></a>.</pre><p><a href="https://regex101.com/r/Dzf9Aa/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="233-号"><a class="markdownIt-Anchor" href="#233-号"></a> 2.3.3 <code>?</code> 号</h3><p>在正则表达式中元字符 <code>?</code> 标记在符号前面的字符为可选，即出现 0 或 1 次。<br>例如，表达式 <code>[T]?he</code> 匹配字符串 <code>he</code> 和 <code>The</code>。</p><pre>"[T]he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><p><a href="https://regex101.com/r/cIg9zm/1" target="_blank" rel="noopener">在线练习</a></p><pre>"[T]?he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in t<a href="#learn-regex"><strong>he</strong></a> garage.</pre><p><a href="https://regex101.com/r/kPpO2x/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="24-号"><a class="markdownIt-Anchor" href="#24-号"></a> 2.4 <code>{}</code> 号</h2><p>在正则表达式中 <code>{}</code> 是一个量词，常用来限定一个或一组字符可以重复出现的次数。<br>例如， 表达式 <code>[0-9]{2,3}</code> 匹配最少 2 位最多 3 位 0~9 的数字。</p><pre>"[0-9]{2,3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p><a href="https://regex101.com/r/juM86s/1" target="_blank" rel="noopener">在线练习</a></p><p>我们可以省略第二个参数。<br>例如，<code>[0-9]{2,}</code> 匹配至少两位 0~9 的数字。</p><pre>"[0-9]{2,}" => The number was 9.<a href="#learn-regex"><strong>9997</strong></a> but we rounded it off to <a href="#learn-regex"><strong>10</strong></a>.0.</pre><p><a href="https://regex101.com/r/Gdy4w5/1" target="_blank" rel="noopener">在线练习</a></p><p>如果逗号也省略掉则表示重复固定的次数。<br>例如，<code>[0-9]{3}</code> 匹配3位数字</p><pre>"[0-9]{3}" => The number was 9.<a href="#learn-regex"><strong>999</strong></a>7 but we rounded it off to 10.0.</pre><p><a href="https://regex101.com/r/Sivu30/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="25-特征标群"><a class="markdownIt-Anchor" href="#25-特征标群"></a> 2.5 <code>(...)</code> 特征标群</h2><p>特征标群是一组写在 <code>(...)</code> 中的子模式。<code>(...)</code> 中包含的内容将会被看成一个整体，和数学中小括号（ ）的作用相同。例如, 表达式 <code>(ab)*</code> 匹配连续出现 0 或更多个 <code>ab</code>。如果没有使用 <code>(...)</code> ，那么表达式 <code>ab*</code> 将匹配连续出现 0 或更多个 <code>b</code> 。再比如之前说的 <code>{}</code> 是用来表示前面一个字符出现指定次数。但如果在 <code>{}</code> 前加上特征标群 <code>(...)</code> 则表示整个标群内的字符重复 N 次。</p><p>我们还可以在 <code>()</code> 中用或字符 <code>|</code> 表示或。例如，<code>(c|g|p)ar</code> 匹配 <code>car</code> 或 <code>gar</code> 或 <code>par</code>.</p><pre>"(c|g|p)ar" => The <a href="#learn-regex"><strong>car</strong></a> is <a href="#learn-regex"><strong>par</strong></a>ked in the <a href="#learn-regex"><strong>gar</strong></a>age.</pre><p><a href="https://regex101.com/r/tUxrBG/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="26-或运算符"><a class="markdownIt-Anchor" href="#26-或运算符"></a> 2.6 <code>|</code> 或运算符</h2><p>或运算符就表示或，用作判断条件。</p><p>例如 <code>(T|t)he|car</code> 匹配 <code>(T|t)he</code> 或 <code>car</code>。</p><pre>"(T|t)he|car" => <a href="#learn-regex"><strong>The</strong></a> <a href="#learn-regex"><strong>car</strong></a> is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/fBXyX0/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="27-转码特殊字符"><a class="markdownIt-Anchor" href="#27-转码特殊字符"></a> 2.7 转码特殊字符</h2><p>反斜线 <code>\</code> 在表达式中用于转码紧跟其后的字符。用于指定 <code>{ } [ ] / \ + * . $ ^ | ?</code> 这些特殊字符。如果想要匹配这些特殊字符则要在其前面加上反斜线 <code>\</code>。</p><p>例如 <code>.</code> 是用来匹配除换行符外的所有字符的。如果想要匹配句子中的 <code>.</code> 则要写成 <code>\.</code> 以下这个例子 <code>\.?</code>是选择性匹配<code>.</code></p><pre>"(f|c|m)at\.?" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> sat on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/DOc5Nu/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="28-锚点"><a class="markdownIt-Anchor" href="#28-锚点"></a> 2.8 锚点</h2><p>在正则表达式中，想要匹配指定开头或结尾的字符串就要使用到锚点。<code>^</code> 指定开头，<code>$</code> 指定结尾。</p><h3 id="281-号"><a class="markdownIt-Anchor" href="#281-号"></a> 2.8.1 <code>^</code> 号</h3><p><code>^</code> 用来检查匹配的字符串是否在所匹配字符串的开头。</p><p>例如，在 <code>abc</code> 中使用表达式 <code>^a</code> 会得到结果 <code>a</code>。但如果使用 <code>^b</code> 将匹配不到任何结果。因为在字符串 <code>abc</code> 中并不是以 <code>b</code> 开头。</p><p>例如，<code>^(T|t)he</code> 匹配以 <code>The</code> 或 <code>the</code> 开头的字符串。</p><pre>"(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in <a href="#learn-regex"><strong>the</strong></a> garage.</pre><p><a href="https://regex101.com/r/5ljjgB/1" target="_blank" rel="noopener">在线练习</a></p><pre>"^(T|t)he" => <a href="#learn-regex"><strong>The</strong></a> car is parked in the garage.</pre><p><a href="https://regex101.com/r/jXrKne/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="282-号"><a class="markdownIt-Anchor" href="#282-号"></a> 2.8.2 <code>$</code> 号</h3><p>同理于 <code>^</code> 号，<code>$</code> 号用来匹配字符是否是最后一个。</p><p>例如，<code>(at\.)$</code> 匹配以 <code>at.</code> 结尾的字符串。</p><pre>"(at\.)" => The fat c<a href="#learn-regex"><strong>at.</strong></a> s<a href="#learn-regex"><strong>at.</strong></a> on the m<a href="#learn-regex"><strong>at.</strong></a></pre><p><a href="https://regex101.com/r/y4Au4D/1" target="_blank" rel="noopener">在线练习</a></p><pre>"(at\.)$" => The fat cat. sat. on the m<a href="#learn-regex"><strong>at.</strong></a></pre><p><a href="https://regex101.com/r/t0AkOd/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="3-简写字符集"><a class="markdownIt-Anchor" href="#3-简写字符集"></a> 3. 简写字符集</h2><p>正则表达式提供一些常用的字符集简写。如下:</p><table><thead><tr><th style="text-align:center">简写</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">.</td><td>除换行符外的所有字符</td></tr><tr><td style="text-align:center">\w</td><td>匹配所有字母数字，等同于 <code>[a-zA-Z0-9_]</code></td></tr><tr><td style="text-align:center">\W</td><td>匹配所有非字母数字，即符号，等同于： <code>[^\w]</code></td></tr><tr><td style="text-align:center">\d</td><td>匹配数字： <code>[0-9]</code></td></tr><tr><td style="text-align:center">\D</td><td>匹配非数字： <code>[^\d]</code></td></tr><tr><td style="text-align:center">\s</td><td>匹配所有空格字符，等同于： <code>[\t\n\f\r\p{Z}]</code></td></tr><tr><td style="text-align:center">\S</td><td>匹配所有非空格字符： <code>[^\s]</code></td></tr><tr><td style="text-align:center">\f</td><td>匹配一个换页符</td></tr><tr><td style="text-align:center">\n</td><td>匹配一个换行符</td></tr><tr><td style="text-align:center">\r</td><td>匹配一个回车符</td></tr><tr><td style="text-align:center">\t</td><td>匹配一个制表符</td></tr><tr><td style="text-align:center">\v</td><td>匹配一个垂直制表符</td></tr><tr><td style="text-align:center">\p</td><td>匹配 CR/LF（等同于 <code>\r\n</code>），用来匹配 DOS 行终止符</td></tr></tbody></table><h2 id="4-零宽度断言前后预查"><a class="markdownIt-Anchor" href="#4-零宽度断言前后预查"></a> 4. 零宽度断言（前后预查）</h2><p>先行断言和后发断言都属于<strong>非捕获簇</strong>（不捕获文本 ，也不针对组合计进行计数）。<br>先行断言用于判断所匹配的格式是否在另一个确定的格式之前，匹配结果不包含该确定格式（仅作为约束）。</p><p>例如，我们想要获得所有跟在 <code>$</code> 符号后的数字，我们可以使用正后发断言 <code>(?&lt;=\$)[0-9\.]*</code>。<br>这个表达式匹配 <code>$</code> 开头，之后跟着 <code>0,1,2,3,4,5,6,7,8,9,.</code> 这些字符可以出现大于等于 0 次。</p><p>零宽度断言如下：</p><table><thead><tr><th style="text-align:center">符号</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">?=</td><td>正先行断言-存在</td></tr><tr><td style="text-align:center">?!</td><td>负先行断言-排除</td></tr><tr><td style="text-align:center">?&lt;=</td><td>正后发断言-存在</td></tr><tr><td style="text-align:center">?&lt;!</td><td>负后发断言-排除</td></tr></tbody></table><h3 id="41-正先行断言"><a class="markdownIt-Anchor" href="#41-正先行断言"></a> 4.1 <code>?=...</code> 正先行断言</h3><p><code>?=...</code> 正先行断言，表示第一部分表达式之后必须跟着 <code>?=...</code>定义的表达式。</p><p>返回结果只包含满足匹配条件的第一部分表达式。<br>定义一个正先行断言要使用 <code>()</code>。在括号内部使用一个问号和等号： <code>(?=...)</code>。</p><p>正先行断言的内容写在括号中的等号后面。<br>例如，表达式 <code>(T|t)he(?=\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>，在括号中我们又定义了正先行断言 <code>(?=\sfat)</code> ，即 <code>The</code> 和 <code>the</code> 后面紧跟着 <code>(空格)fat</code>。</p><pre>"(T|t)he(?=\sfat)" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/IDDARt/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="42-负先行断言"><a class="markdownIt-Anchor" href="#42-负先行断言"></a> 4.2 <code>?!...</code> 负先行断言</h3><p>负先行断言 <code>?!</code> 用于筛选所有匹配结果，筛选条件为 其后不跟随着断言中定义的格式。<br><code>正先行断言</code>  定义和 <code>负先行断言</code> 一样，区别就是 <code>=</code> 替换成 <code>!</code> 也就是 <code>(?!...)</code>。</p><p>表达式 <code>(T|t)he(?!\sfat)</code> 匹配 <code>The</code> 和 <code>the</code>，且其后不跟着 <code>(空格)fat</code>。</p><pre>"(T|t)he(?!\sfat)" => The fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/V32Npg/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="43-正后发断言"><a class="markdownIt-Anchor" href="#43-正后发断言"></a> 4.3 <code>?&lt;= ...</code> 正后发断言</h3><p>正后发断言 记作<code>(?&lt;=...)</code> 用于筛选所有匹配结果，筛选条件为 其前跟随着断言中定义的格式。<br>例如，表达式 <code>(?&lt;=(T|t)he\s)(fat|mat)</code> 匹配 <code>fat</code> 和 <code>mat</code>，且其前跟着 <code>The</code> 或 <code>the</code>。</p><pre>"(?<=(t|t)he\s)(fat|mat)" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the <a href="#learn-regex"><strong>mat</strong></a>.</=(t|t)he\s)(fat|mat)"></pre><p><a href="https://regex101.com/r/avH165/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="44-负后发断言"><a class="markdownIt-Anchor" href="#44-负后发断言"></a> 4.4 <code>?&lt;!...</code> 负后发断言</h3><p>负后发断言 记作 <code>(?&lt;!...)</code> 用于筛选所有匹配结果，筛选条件为 其前不跟随着断言中定义的格式。<br>例如，表达式 <code>(?&lt;!(T|t)he\s)(cat)</code> 匹配 <code>cat</code>，且其前不跟着 <code>The</code> 或 <code>the</code>。</p><pre>"(?&lt;!(T|t)he\s)(cat)" => The cat sat on <a href="#learn-regex"><strong>cat</strong></a>.</pre><p><a href="https://regex101.com/r/8Efx5G/1" target="_blank" rel="noopener">在线练习</a></p><h2 id="5-标志"><a class="markdownIt-Anchor" href="#5-标志"></a> 5. 标志</h2><p>标志也叫模式修正符，因为它可以用来修改表达式的搜索结果。<br>这些标志可以任意的组合使用，它也是整个正则表达式的一部分。</p><table><thead><tr><th style="text-align:center">标志</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center">i</td><td>忽略大小写。</td></tr><tr><td style="text-align:center">g</td><td>全局搜索。</td></tr><tr><td style="text-align:center">m</td><td>多行修饰符：锚点元字符 <code>^</code> <code>$</code> 工作范围在每行的起始。</td></tr></tbody></table><h3 id="51-忽略大小写-case-insensitive"><a class="markdownIt-Anchor" href="#51-忽略大小写-case-insensitive"></a> 5.1 忽略大小写 (Case Insensitive)</h3><p>修饰语 <code>i</code> 用于忽略大小写。<br>例如，表达式 <code>/The/gi</code> 表示在全局搜索 <code>The</code>，在后面的 <code>i</code> 将其条件修改为忽略大小写，则变成搜索 <code>the</code> 和 <code>The</code>，<code>g</code> 表示全局搜索。</p><pre>"The" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on the mat.</pre><p><a href="https://regex101.com/r/dpQyf9/1" target="_blank" rel="noopener">在线练习</a></p><pre>"/The/gi" => <a href="#learn-regex"><strong>The</strong></a> fat cat sat on <a href="#learn-regex"><strong>the</strong></a> mat.</pre><p><a href="https://regex101.com/r/ahfiuh/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="52-全局搜索-global-search"><a class="markdownIt-Anchor" href="#52-全局搜索-global-search"></a> 5.2 全局搜索 (Global search)</h3><p>修饰符 <code>g</code> 常用于执行一个全局搜索匹配，即（不仅仅返回第一个匹配的，而是返回全部）。<br>例如，表达式 <code>/.(at)/g</code> 表示搜索 任意字符（除了换行）+ <code>at</code>，并返回全部结果。</p><pre>"/.(at)/" => The <a href="#learn-regex"><strong>fat</strong></a> cat sat on the mat.</pre><p><a href="https://regex101.com/r/jnk6gM/1" target="_blank" rel="noopener">在线练习</a></p><pre>"/.(at)/g" => The <a href="#learn-regex"><strong>fat</strong></a> <a href="#learn-regex"><strong>cat</strong></a> <a href="#learn-regex"><strong>sat</strong></a> on the <a href="#learn-regex"><strong>mat</strong></a>.</pre><p><a href="https://regex101.com/r/dO1nef/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="53-多行修饰符-multiline"><a class="markdownIt-Anchor" href="#53-多行修饰符-multiline"></a> 5.3 多行修饰符 (Multiline)</h3><p>多行修饰符 <code>m</code> 常用于执行一个多行匹配。</p><p>像之前介绍的 <code>(^,$)</code> 用于检查格式是否是在待检测字符串的开头或结尾。但我们如果想要它在每行的开头和结尾生效，我们需要用到多行修饰符 <code>m</code>。</p><p>例如，表达式 <code>/at(.)?$/gm</code> 表示小写字符 <code>a</code> 后跟小写字符 <code>t</code> ，末尾可选除换行符外任意字符。根据 <code>m</code> 修饰符，现在表达式匹配每行的结尾。</p><pre>"/.at(.)?$/" => The fat                cat sat                on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/hoGMkP/1" target="_blank" rel="noopener">在线练习</a></p><pre>"/.at(.)?$/gm" => The <a href="#learn-regex"><strong>fat</strong></a>                  cat <a href="#learn-regex"><strong>sat</strong></a>                  on the <a href="#learn-regex"><strong>mat.</strong></a></pre><p><a href="https://regex101.com/r/E88WE2/1" target="_blank" rel="noopener">在线练习</a></p><h3 id="6-贪婪匹配与惰性匹配-greedy-vs-lazy-matching"><a class="markdownIt-Anchor" href="#6-贪婪匹配与惰性匹配-greedy-vs-lazy-matching"></a> 6. 贪婪匹配与惰性匹配 (Greedy vs lazy matching)</h3><p>正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长的子串。我们可以使用 <code>?</code> 将贪婪匹配模式转化为惰性匹配模式。</p><pre>"/(.*at)/" => <a href="#learn-regex"><strong>The fat cat sat on the mat</strong></a>. </pre><p><a href="https://regex101.com/r/AyAdgJ/1" target="_blank" rel="noopener">在线练习</a></p><pre>"/(.*?at)/" => <a href="#learn-regex"><strong>The fat</strong></a> cat sat on the mat. </pre><p><a href="https://regex101.com/r/AyAdgJ/2" target="_blank" rel="noopener">在线练习</a></p><!--#### 语法--><!--```javaScript--><!--/pattern/modifiers;--><!--```--><!--#### 实例--><!--```javaScript--><!--var patt = /chuyuxuan/i;--><!--```--><!--#### 解释--><!--+ ``/chuyuxuan/i`` 是一个正则表达式。--><!--+ `chuyuxuan` 是模式（pattern）（在搜索中使用）。--><!--+ `i` 是修饰符（把搜索修改为大小写不敏感）。--><!--在 JavaScript 中，正则表达式常用于两个字符串方法：`search()` 和 `replace()`。--><!--+ `search()` 方法使用表达式来搜索匹配，然后返回匹配的位置。--><!--#### 实例--><!--+ 使用字符串来执行对 `chuyuxuan` 的搜索：--><!--  ```javaScript--><!--  var str = "Visit chuyuxuan!";--><!--  var n = str.search("chuyuxuan");--><!--```--><!--#### 结果--><!--  ```javaScript--><!--  6--><!--  ```--><!--#### 实例--><!--+ 使用正则表达式执行搜索字符串中`chuyuxuan` 的大小写不敏感的搜索：--><!--```javaScript--><!--  var str = "Visit chuyuxuan";--><!--  var n = str.search(/chuyuxuan/i);--><!--n 中的结果将是：--><!--6--><!--```--><!--## replace() 方法返回模式被替换处修改后的字符串。--><!--#### 实例--><!--+ 使用大小写不明的正则表达式以 chuyuxuan 来替换字符串中的 Microsoft：--><!--```javaScript--><!--  var str = "Visit Microsoft!";--><!--  var res = str.replace(/microsoft/i, "chuyuxuan");--><!--res 的结果将是：--><!--Visit chuyuxuan!--><!--```--><!--部分修饰符：--><!--|  修饰符 |描述 |--><!--|:-|:-|--><!--|I|执行对大小写不敏感的匹配。--><!--|G|执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。--><!--|M|执行多行匹配。--><!--+ 例如：--><!--```javaScript--><!--//在字符串中查找 "ain":--><!--var str="The rain in SPAIN stays mainly in the plain";--><!--var n=str.match(/ain/g);--><!--//n 输出数组结果值:--><!--ain,ain,ain--><!--```--><!--## 正则表达式模式--><!--+ 括号用于查找一定范围的字符串：--><!--| 表达式  | 描述  |--><!--|:-|:-|--><!--|[abc]|查找方括号之间的任何字符。|试一试--><!--|[0-9]|查找任何从 0 至 9 的数字。|试一试--><!--|(x\|y)|查找由 \| 分隔的任何选项。|试一试--><!--+ 元字符（Metacharacter）是拥有特殊含义的字符：--><!--|元字符|描述|--><!--|:-|:-|--><!--|\d|查找数字。|试一试--><!--|\s|查找空白字符。|试一试--><!--|\b|匹配单词边界。|试一试--><!--|\uxxxx|查找以十六进制数 xxxx 规定的 Unicode 字符。|试一试--><!--+ Quantifiers 定义量词：--><!--|量词|描述--><!--|:-|:-|--><!--|n+|匹配任何包含至少一个 n 的字符串。|试一试--><!--|n*|匹配任何包含零个或多个 n 的字符串。|试一试--><!--|n?|匹配任何包含零个或一个 n 的字符串。|试一试--><!--### 使用 test()--><!--test() 是一个正则表达式方法。--><!--它通过模式来搜索字符串，然后根据结果返回`` true ``或 `false`。--><!--搜索字符串中的字符 "e"：--><!--```javaScript--><!--var patt = /e/;--><!--patt.test("The best things in life are free!");--><!--//由于字符串中有一个 "e"，以上代码的输出将是：--><!--true--><!--```--><!--### 使用 exec()--><!--exec() 方法是一个正则表达式方法。--><!--它通过指定的模式（pattern）搜索字符串，并返回已找到的文本。--><!--如果未找到匹配，则返回 `null`。--><!--搜索字符串中的字符 "e"：--><!--```javaScript--><!--/e/.exec("The best things in life are free!");--><!--//由于字符串中有一个 "e"，以上代码的输出将是：--><!--e--><!--```-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javaScript" scheme="https://blog.chuyuxuan.top/tags/javaScript/"/>
    
  </entry>
  
  <entry>
    <title>小爱课程表适配教务网</title>
    <link href="https://blog.chuyuxuan.top/2021/03/01/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E4%BA%8Esock/"/>
    <id>https://blog.chuyuxuan.top/2021/03/01/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E4%BA%8Esock/</id>
    <published>2021-03-01T04:30:00.000Z</published>
    <updated>2021-03-04T06:32:02.034Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="如果你有小米手机绝对不是广告"><a class="markdownIt-Anchor" href="#如果你有小米手机绝对不是广告"></a> 如果你有小米手机（绝对不是广告）</h1><p>怎么说，MIUI很对我胃口，特别是现在的小爱同学，贼香。</p><p>大学里面最烦人的是什么？我想个人来说<code>查课表</code>绝对排进前十。特别是教务网不是好用。因此，前段时间有机会加入到小米的小爱同学课程表开发者群 <sub>虽然我经常划水🤣</sub> ，特地来将代码记录一下。</p><p>主要方法是正则表达式，利用小米提供的API即可使用。</p><p>这里我学校的教务系统是强智的，路径为<a href="#">http://教务网域名/jsxsd/framework/xsMain.jsp</a></p><p>整体界面如下所示：</p><p><a href="https://gitee.com/Chuyuxuan/tuc/raw/master/20210304142154.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/Chuyuxuan/tuc/raw/master/20210304142154.jpg" class="lazyload"></a></p><p>就可以使用以下代码放入开发者工具，详情可以去看看<a href="https://ldtu0m3md0.feishu.cn/docs/doccnhZPl8KnswEthRXUz8ivnhb#line-38" target="_blank" rel="noopener">官方文档</a></p><h1 id="废话少说上代码ing"><a class="markdownIt-Anchor" href="#废话少说上代码ing"></a> 废话少说，上代码ing.</h1><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scheduleHtmlProvider</span>(<span class="params">iframeContent = <span class="string">""</span>, frameContent = <span class="string">""</span>, dom = document</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> request = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">request.open(<span class="string">'GET'</span>, <span class="string">'/jsxsd/xskb/xskb_list.do'</span>, <span class="literal">false</span>); </span><br><span class="line">request.send(<span class="literal">null</span>);</span><br><span class="line"><span class="keyword">if</span> (request.status === <span class="number">200</span>) &#123; <span class="comment">//没有的话不然会提示宽度不够🤐</span></span><br><span class="line">  <span class="keyword">return</span> request.responseText.replace(<span class="regexp">/[\r\n]/g</span>,<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">scheduleHtmlParser</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//除函数名外都可编辑</span></span><br><span class="line">    <span class="comment">//传入的参数为上一步函数获取到的html</span></span><br><span class="line">    <span class="comment">//可使用正则匹配</span></span><br><span class="line">    <span class="comment">//可使用解析dom匹配，工具内置了$，跟jquery使用方法一样，直接用就可以了，参考：https://juejin.im/post/5ea131f76fb9a03c8122d6b9</span></span><br><span class="line">    <span class="comment">//以下为示例，您可以完全重写或在此基础上更改、</span></span><br><span class="line">    <span class="built_in">console</span>.info(html);</span><br><span class="line">    <span class="keyword">let</span> result = [];</span><br><span class="line">    <span class="keyword">let</span> resultT = [];</span><br><span class="line">    <span class="comment">//上课时间</span></span><br><span class="line">    <span class="keyword">const</span> regexT = <span class="regexp">/&lt;th width="70" height="28" align="center"&gt;.*?第.*?节&amp;nbsp;&lt;br\/&gt;(.*?)-(.*?) .*?&lt;\/th&gt;/gm</span>;</span><br><span class="line">    <span class="keyword">let</span> timeFlag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((t = regexT.exec(html)) !== <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t.index === regexT.lastIndex) &#123;</span><br><span class="line">            regexT.lastIndex++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> reT = &#123;&#125;</span><br><span class="line">        t.forEach(<span class="function">(<span class="params">matchT, groupIndexT</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"matchT: "</span>+matchT)</span><br><span class="line">            <span class="keyword">switch</span>(groupIndexT)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    reT.section = ++timeFlag;</span><br><span class="line">                    reT.startTime = matchT;</span><br><span class="line">                    <span class="keyword">let</span> hour1 = <span class="built_in">parseInt</span>(matchT.split(<span class="string">':'</span>)[<span class="number">0</span>]);</span><br><span class="line">                    <span class="keyword">let</span> minute1 = <span class="built_in">parseInt</span>(matchT.split(<span class="string">':'</span>)[<span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">if</span>( (minute1+<span class="number">45</span>)&gt;=<span class="number">60</span> )&#123;</span><br><span class="line">                        minute1 = minute1+<span class="number">45</span><span class="number">-60</span>;</span><br><span class="line">                        hour1++;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        minute1 += <span class="number">45</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    reT.endTime = ((hour1&lt;<span class="number">10</span>)?<span class="string">"0"</span>:<span class="string">""</span>)+hour1+<span class="string">":"</span>+minute1;</span><br><span class="line">                    resultT.push(reT);</span><br><span class="line">                    reT = &#123;&#125;</span><br><span class="line">                    <span class="built_in">console</span>.log(timeFlag+<span class="string">"1"</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    reT.section = ++timeFlag;</span><br><span class="line">                    reT.endTime = matchT;</span><br><span class="line">                    <span class="keyword">let</span> hour2 = <span class="built_in">parseInt</span>(matchT.split(<span class="string">':'</span>)[<span class="number">0</span>]);</span><br><span class="line">                    <span class="keyword">let</span> minute2 = <span class="built_in">parseInt</span>(matchT.split(<span class="string">':'</span>)[<span class="number">1</span>]);</span><br><span class="line">                    <span class="keyword">if</span>( (minute2<span class="number">-45</span>)&lt;<span class="number">0</span> )&#123;</span><br><span class="line">                        minute2 = minute2<span class="number">-45</span>+<span class="number">60</span>;</span><br><span class="line">                        hour2--;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        minute2 -= <span class="number">45</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    reT.startTime = ((hour2&lt;<span class="number">10</span>)?<span class="string">"0"</span>:<span class="string">""</span>)+hour2+<span class="string">":"</span>+minute2;</span><br><span class="line">                    resultT.push(reT);</span><br><span class="line">                    reT = &#123;&#125;</span><br><span class="line">                    <span class="built_in">console</span>.log(timeFlag+<span class="string">"2"</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//课程</span></span><br><span class="line">    <span class="keyword">const</span> regex = <span class="regexp">/kbcontent1.*?&lt;div id=".*?-(.*?)-2".*?style="display: none;" class="kbcontent".*?&gt;(.*?)&lt;\/div&gt;/gm</span>;</span><br><span class="line">    <span class="keyword">var</span> log;</span><br><span class="line">    <span class="keyword">while</span> ((m = regex.exec(html)) !== <span class="literal">null</span>) &#123;</span><br><span class="line">        log = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (m.index === regex.lastIndex) &#123;</span><br><span class="line">            regex.lastIndex++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> weekDay;</span><br><span class="line">        m.forEach(<span class="function">(<span class="params">match, groupIndex</span>) =&gt;</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">switch</span>(groupIndex)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    weekDay = <span class="built_in">parseInt</span>(match)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    <span class="comment">//log += ("\n内容："+match);</span></span><br><span class="line">                    <span class="keyword">const</span> regexS = <span class="regexp">/(.*?)&lt;br\/&gt;&lt;font title='老师'&gt;(.*?)&lt;\/font&gt;&lt;br\/&gt;&lt;font title='周次\(节次\)'&gt;(.*?)\(周\)\[(.*?)节\]&lt;\/font&gt;&lt;br\/&gt;.*?&lt;font title='教室'&gt;(.*?)&lt;\/font&gt;&lt;br\/&gt;&lt;font name='xsks' color='black' style='display:none;'&gt;.*?&lt;br\/&gt;&lt;\/font&gt;/gm</span>;;</span><br><span class="line">                    <span class="keyword">while</span> ((mm = regexS.exec(match)) !== <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (mm.index === regexS.lastIndex) &#123;</span><br><span class="line">                            regex.lastIndex++;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">let</span> re = &#123; <span class="attr">sections</span>: [], <span class="attr">weeks</span>: [] &#125;</span><br><span class="line">                        mm.forEach(<span class="function">(<span class="params">matchS, groupIndexS</span>) =&gt;</span> &#123;</span><br><span class="line">                            <span class="keyword">switch</span>(groupIndexS)&#123;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                    <span class="built_in">console</span>.info(<span class="string">"星期"</span>+weekDay)</span><br><span class="line">                                    re.day = weekDay;</span><br><span class="line">                                    matchS = matchS.replace(<span class="string">"---------------------&lt;br&gt;"</span>,<span class="string">""</span>)</span><br><span class="line">                                    matchS = matchS.replace(<span class="string">"&lt;br/&gt;"</span>,<span class="string">""</span>)</span><br><span class="line">                                    <span class="built_in">console</span>.info(<span class="string">"   课程名："</span>+matchS+<span class="string">"\n"</span>);</span><br><span class="line">                                    re.name = matchS;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                    <span class="built_in">console</span>.info(<span class="string">"   老师："</span>+matchS+<span class="string">"\n"</span>);</span><br><span class="line">                                    re.teacher = matchS;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                    <span class="built_in">console</span>.info(<span class="string">"   周次："</span>+matchS+<span class="string">"\n"</span>);</span><br><span class="line">                                    <span class="keyword">var</span> weekRange = matchS.split(<span class="string">","</span>); <span class="comment">//处理逗号分周</span></span><br><span class="line">                                    <span class="keyword">for</span>(<span class="keyword">var</span> weekTemp = <span class="number">0</span>; weekTemp &lt; weekRange.length; weekTemp++)&#123;</span><br><span class="line">                                        <span class="keyword">if</span>(weekRange[weekTemp].search(<span class="string">'-'</span>) != <span class="number">-1</span>)&#123; <span class="comment">//如果不止一周</span></span><br><span class="line">                                            <span class="keyword">let</span> begin = weekRange[weekTemp].split(<span class="string">'-'</span>)[<span class="number">0</span>];</span><br><span class="line">                                            <span class="keyword">let</span> end = weekRange[weekTemp].split(<span class="string">'-'</span>)[<span class="number">1</span>];</span><br><span class="line">                                            <span class="keyword">for</span>(<span class="keyword">let</span> iii = <span class="built_in">parseInt</span>(begin); iii &lt;= <span class="built_in">parseInt</span>(end); iii++)&#123;</span><br><span class="line">                                                re.weeks.push(iii);</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;<span class="keyword">else</span>&#123; <span class="comment">//只有一周</span></span><br><span class="line">                                            re.weeks.push(<span class="built_in">parseInt</span>(weekRange[weekTemp]))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                   &#125;</span><br><span class="line">                                   <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                                    <span class="built_in">console</span>.info(<span class="string">"   节次："</span>+matchS+<span class="string">"\n"</span>);</span><br><span class="line">                                    <span class="keyword">if</span>(matchS.search(<span class="string">'-'</span>) != <span class="number">-1</span>)&#123; <span class="comment">//如果不止一节</span></span><br><span class="line">                                        <span class="keyword">let</span> begin2 = matchS.split(<span class="string">'-'</span>)[<span class="number">0</span>];</span><br><span class="line">                                        <span class="keyword">let</span> end2 = matchS.split(<span class="string">'-'</span>)[<span class="number">1</span>];</span><br><span class="line">                                        <span class="keyword">for</span>(<span class="keyword">let</span> iii2 = <span class="built_in">parseInt</span>(begin2);iii2&lt;=<span class="built_in">parseInt</span>(end2);iii2++)&#123;</span><br><span class="line">                                            <span class="keyword">let</span> ree = &#123;&#125;</span><br><span class="line">                                            ree.section = iii2;</span><br><span class="line">                                            re.sections.push(ree);</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;<span class="keyword">else</span>&#123; <span class="comment">//只有一节</span></span><br><span class="line">                                        <span class="keyword">let</span> ree2 = &#123;&#125;</span><br><span class="line">                                        ree2.section = <span class="built_in">parseInt</span>(matchS);</span><br><span class="line">                                        re.sections.push(ree2)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                                    <span class="built_in">console</span>.info(<span class="string">"   教室："</span>+matchS+<span class="string">"\n"</span>);</span><br><span class="line">                                    re.position = matchS;</span><br><span class="line">                                    <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;);</span><br><span class="line">                        result.push(re);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//console.log(log);</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="built_in">console</span>.info(resultT)</span><br><span class="line">     <span class="built_in">console</span>.info(result)</span><br><span class="line">     <span class="keyword">return</span> &#123; <span class="attr">courseInfos</span>: result, <span class="attr">sectionTimes</span>: resultT&#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="小爱同学" scheme="https://blog.chuyuxuan.top/tags/%E5%B0%8F%E7%88%B1%E5%90%8C%E5%AD%A6/"/>
    
      <category term="强智教务" scheme="https://blog.chuyuxuan.top/tags/%E5%BC%BA%E6%99%BA%E6%95%99%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>linux-基本命令</title>
    <link href="https://blog.chuyuxuan.top/2021/02/08/Linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.chuyuxuan.top/2021/02/08/Linux/linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-08T04:10:02.000Z</published>
    <updated>2021-02-08T04:20:53.003Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="linux-centos-8"><a class="markdownIt-Anchor" href="#linux-centos-8"></a> Linux-CentOS 8</h1><div class="note info">            <p>已经同步于个人<a href="https://wiki.chuyuxuan.top/zh/Linux" target="_blank" rel="noopener">wiki</a>.</p>          </div><h2 id="一-基础操作指令"><a class="markdownIt-Anchor" href="#一-基础操作指令"></a> 一、基础操作指令</h2><table><thead><tr><th style="text-align:left">code</th><th style="text-align:left">解释</th><th style="text-align:left">备注</th></tr></thead><tbody><tr><td style="text-align:left"><code>ls</code></td><td style="text-align:left">显示当前目录文件和文件夹</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>pwd</code></td><td style="text-align:left">显示当前路径</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>cd</code></td><td style="text-align:left">切换目录</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>mkdir</code></td><td style="text-align:left">创建目录</td><td style="text-align:left">可多路径创建  <strong>mkdir a/b/c</strong></td></tr><tr><td style="text-align:left"><code>touch</code></td><td style="text-align:left">创建文件</td><td style="text-align:left">可多路径创建  <strong>toch a/b/c.txt</strong></td></tr><tr><td style="text-align:left"><code>cp</code></td><td style="text-align:left">复制文件、加<code>-r</code>递归复制</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>mv</code></td><td style="text-align:left">移动文档到新的位置、重命名</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>rm</code></td><td style="text-align:left">删除</td><td style="text-align:left"><code>-f</code>不用确定</td></tr><tr><td style="text-align:left"><code>cat</code></td><td style="text-align:left">读取文件内容</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>df</code></td><td style="text-align:left">查看磁盘空间</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>free</code></td><td style="text-align:left">查看内存使用情况，加让<code>-h</code>可格式化输出</td><td style="text-align:left">输出时包括物理内存、交换内存(swap)和内核缓冲区内存，加上 <strong>free -h -s <code>秒</code></strong>  ，可持续监控</td></tr><tr><td style="text-align:left"><code>head</code></td><td style="text-align:left">查看一个文件的前n行，不指定默认10行</td><td style="text-align:left">**head -10 **: 查看前10行</td></tr><tr><td style="text-align:left"><code>tail</code></td><td style="text-align:left">查看一个文件的末n行，不指定默认后10行</td><td style="text-align:left"><code>-n</code>指定行数（n为数字）|<code>-f</code>动态变化（必须是系统往里加的）一般用来查看日志</td></tr><tr><td style="text-align:left"><code>date</code></td><td style="text-align:left">时间日期读取设置</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>clear/ctrl+l</code></td><td style="text-align:left">清除终端中的信息和结果，往上挪动</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><code>|</code></td><td style="text-align:left">一般用于过滤特殊扩展处理</td><td style="text-align:left">管道不能单独使用，需要配合指令辅助, <code>| grep</code>要过滤的信息,过滤使用方法前方命令的输出，就是后面指令的输入</td></tr><tr><td style="text-align:left"><code>whoami</code></td><td style="text-align:left">显示当前登录的用户名</td><td style="text-align:left">一般用在shell脚本，用于获取当前操作的用户名，方便纪录日志</td></tr><tr><td style="text-align:left"><code>ps</code></td><td style="text-align:left">查看服务器进程</td><td style="text-align:left"><strong>-e</strong>表示全部的进程|<strong>-f</strong>  显示全部的列</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.chuyuxuan.top/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>2020年度总结</title>
    <link href="https://blog.chuyuxuan.top/2021/01/25/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <id>https://blog.chuyuxuan.top/2021/01/25/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</id>
    <published>2021-01-25T10:49:35.000Z</published>
    <updated>2021-02-26T03:33:08.041Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>嘛，不知不觉2020年就这样悄悄的溜走了，2021也如期而至，我这篇文章写在了2021的一月末尾。我有很久没有动笔写博文了，上一篇博文 [<s>如果那算是一篇文章的话</s>]还是停留在去年的十一月份🤣。所以，是时候来一篇总结，回顾一下自己在这一年中干了哪些傻*事儿。</p><hr><h2 id="生活学习"><a class="markdownIt-Anchor" href="#生活学习"></a> 生活学习</h2><p>2020年发生了很多事情，由于疫情原因，我决定考研了。对的，在19年的12月我还在自己的B站动态里雪月风花的无病呻吟，还说什么找工作和考研两手准备，果然是个der~😝.自己工作也没有找，知识也没怎么学，就这样磨磨蹭蹭的，浑浑噩噩的到了3月底。令我决心考研的是3月底我的同学对我说的话：你这样又不去找工作，又不准备考研，难道呆在家啃老啊？嗯，大概意思是这么表达的吧，真实话语应该比这个语气要强烈的多，不然我可能是一笑了之。自己做了一些思想工作之后，开始准备考研。别人考研都是从1月，甚至是从上一年的9月份开学便是准备了，然而我却在浑浑噩噩的毫无感觉和压力。在不知道自己几斤几两的敲定好一所211院校之后，就哼哧哼哧的准备考研了。因为自己当时并没有了解数学的难度，虽然翻了一下往年的数一考研试卷，感觉也就那样（我当时真就感觉那样，果然是不知者无畏呀），给自己定了一个很高的分数。所有的分数定下来之后，居然比目标院校的入档线还高出那么三十多分，顿时可把自己牛逼坏了，幻想着白日梦。</p><p>然而，通过4月，5月的复习情况，数学的难度远远不及自己所想。所以到五月中旬就放弃了一段时间，开始转向学校的线上考试来“缓解压力”。当然，5月份的这段时间里还做了一个小项目，就是一个聊天室，当时是现学现卖，在学校的课程设计中取得了还可以的成绩。7月和8月就是一个愉快的暑假了。中途回了学校一趟，拿了一些书和一些杂七杂八的东西。</p><p>总归是家里一个人太安逸或者太孤了，学习效率以及学习强度远远不及学校里。线下开学之后，自己因为没有在外面租房子，又没有去找考研教室，所以只好呆在图书馆里了。图书馆的缺点就是每天晚上九点半关门，早上八点才开门，还得抢位置，去晚了就得跑到顶楼去找了，而且离我宿舍坐校车得十来分钟。当然我这里是说明路途比较远，除了学习之外还得在准备学习的方面花功夫，所以挺羡慕那些能找到考研教室的同学，因为自己就背着书跑挺累的。图书馆原则上闭馆前自己的图书是要带走的。不过后来可能是管理员大妈看我们是考研的，就默许我们的书放在一个小角落了，每天起早点去便是。</p><p>就这样哼哧哼哧的到了12月，由于学校的考点没了，<s>主要是自己记错了日期，往后推了一天，怪自己傻😰</s>，不得不在外面租房子去市里面的考点了。27号考完那一天傍晚，回去的路上就给老爹发了一条消息：<a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/20201227.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/20201227.jpg" class="lazyload"></a>。<strong>呵呵~，绕了一圈又回到了原点。</strong><br>不过让我开心的就是本学期GPA超过了3.0 ，以往都是2.5左右，中规中矩 ，看来在哪方面投入的时间多，哪方面得到的回报也相对增多。</p><hr><h2 id="技术方面"><a class="markdownIt-Anchor" href="#技术方面"></a> 技术方面</h2><p>总体来说，进步缓慢。</p><p>自己在19年下旬开始写博客的，也就是从19年开始，我的非学校所学习的知识开始指数增长。当然这里也不是说学校里所学的理论没有什么用处,《计算机网络》《数据结构》(因为专业课原因，便也把他们仔细的过了一遍，这里也为自己开了一个坑，要把《数据结构》书上的所有代码实例化，目前在准备中，到时候自己可能会挂在某个动态也说不定。)等等对我有很大的帮助.学校最大的毛病就是开设语言课的老师据我所知自己并不会使用该语言，所以在某些方面还不如网上的课程讲的详细生动，在这里我要感谢互联网让我学到了很多没有学到的东西。<code>GitHub</code>上没怎么更新，<code>Gitee</code>也差不多，从这两张图也可以看出来.<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/2021126.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/2021126.jpg" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/20211261.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/20211261.jpg" class="lazyload"></a><br>20年初参加了上海某互联网公司的线上培训，这里打开了我对linux的大门，同时我也开始摆弄Linux系统。随后，在同学的转发中白嫖了阿里云的一台学生主机，开始了线上愉快的玩耍。自己也买了几个域名，当然最后用于备案的就这个 <em>chuyuxuan.top</em> 了.这里算是自己头一次在网上购买云服务了吧。之后，自己开始填坑NODE这一方面知识，摸了摸一下前端的中，高阶学习路线，开始朝着路线上一步一步的学习发展，之后就处于学校的课程学习，考研准备。其实总的来说，在这一年里，自己在技术这方面并没有去深入了，而是蚕食一般，十分缓慢的蠕动着。考完研后，学校组织培训课程，我自己选了《大数据与UI》这门。讲真，我单纯是冲着UI去的🤣，但是没想到，整个课程留给UI的就短短不到十分之一，其他的都是Hadoop大数据集群等一些大数据方面的东西，而且，UI课程所讲的全部都是我在大一大二期间都懂的东西了 <span style="border-bottom: 1px dashed #389fff;"><span class="hint--top hint--rounded hint--info" aria-label="当初刚进大学的大一大二一门心思的铺在了设计专业方面上，完全没想过对口专业，相对于同专业的来说，自己可能是浪费了两年了吧" ontouchstart>都懂</span></span>。不过这也给我拓展了技术面，看来自己以后要朝着<code>前后左右端</code>工程师进军🤪，当然，能够成为一个全栈工程师是挺不错的，但也怕自己什么都会，却什么都不会<s>学不精通🤪</s>。</p><hr><h2 id="游戏方面"><a class="markdownIt-Anchor" href="#游戏方面"></a> 游戏方面</h2><p>身为一个大学生，不打点游戏怎么行呢？<s>（bushi🤪）</s></p><p>在19年寒假里再过了一遍<code>GTA5</code>的故事线，不得不感叹神作就是神作。之后就自己找罪受的<code>傻逼荣耀</code>上了王者；9月底<code>原神</code>开服也过了一下剧情，米忽悠的美工和音乐一直都是可以的，从<code>崩坏3</code>系列可以看的出来。当自己很不爽的时候拉上几个哥们去<code>求生之路2</code>中杀杀僵尸，或者在<code>Human: Fall Flat</code>中与哥们互相嘲笑🤪。虽然<code>赛博朋克2077</code>出了，但是自己电脑带不动，就没有买了，网上说优化不行，再等几年等我换电脑了之后再玩也不迟。这一年里就只玩过这么些吧，如果让我选择一款心目中的年度最佳，<code>GTA5</code>永远在王座上。</p><hr><h2 id="展望"><a class="markdownIt-Anchor" href="#展望"></a> 展望</h2><p>对的，总要对未来进行规划和展望的。尽管<code>2020年</code>过的挺奇怪的，但是一些愿望还是实现了。比如去了韶山，完成了一场旅行，自己的小小的开源项目也有了10左右star，这个足以让我开心一段时间了。但也因为疫情等原因，自己的驾照还没有拿下来，目前还没有找到她等等很多很多，所以对2021还是要有期待的，并不是理想主义者，而是要为了理想去努力朝目标前进。所以，2021的目标不多，完成我就十分开心了。</p><ul><li>拿到驾照。</li><li>找到月薪上9K的工作。</li><li>找到NPY。</li><li>和家人来一场旅行。</li></ul><p>期待2021年的总结，over。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="生活日常" scheme="https://blog.chuyuxuan.top/categories/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="总结" scheme="https://blog.chuyuxuan.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>捕捉到一个小可爱</title>
    <link href="https://blog.chuyuxuan.top/2020/11/17/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E6%AC%B8%E5%98%BF%EF%BC%81/"/>
    <id>https://blog.chuyuxuan.top/2020/11/17/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E6%AC%B8%E5%98%BF%EF%BC%81/</id>
    <published>2020-11-17T15:23:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="欸嘿~"><a class="markdownIt-Anchor" href="#欸嘿~"></a> 欸嘿~</h1><p>昨天下晚自习，想到自己好久没有去关注自己的网站<s>才不是我懒</s>了，登录到网站的后台看看数据，突然发现一个评论，还是前天的。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/2020111701.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/2020111701.jpg" class="lazyload"></a></p><p>像往常一样，我都会去拜访来我这边的朋友，然而，在我逛这位朋友的博客的时候，评论区让我受宠若惊！居然有一位粉丝宣传我的博客！！！😝这么顶的嘛。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/2020111702.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/2020111702.jpg" class="lazyload"></a></p><p><code>在这里感谢这位小可爱帮我宣传，于是我这里就记录一下，嘻嘻。</code></p><p>其实最近忙着考研，还有38天了，看到这位粉丝，做题做得嗡嗡的脑子，瞬间活跃了起来哈哈哈。愿这个小可爱天天开心哦！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="生活日常" scheme="https://blog.chuyuxuan.top/categories/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="日常" scheme="https://blog.chuyuxuan.top/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>Linux Bash Shell Base</title>
    <link href="https://blog.chuyuxuan.top/2020/09/06/Linux/shell%E5%9F%BA%E6%9C%AC/"/>
    <id>https://blog.chuyuxuan.top/2020/09/06/Linux/shell%E5%9F%BA%E6%9C%AC/</id>
    <published>2020-09-06T11:49:35.000Z</published>
    <updated>2021-02-08T04:12:44.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="start"><a class="markdownIt-Anchor" href="#start"></a> Start</h1><h2 id="创建文件以sh结尾"><a class="markdownIt-Anchor" href="#创建文件以sh结尾"></a> 创建文件，以.sh结尾</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sh</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash       </span></span><br><span class="line"><span class="comment">#这个是默认的，#表示统配，/bin/bash 表示执行工具</span></span><br><span class="line">date  <span class="comment"># 输出日期</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"messages"</span> <span class="comment"># 输出信息</span></span><br><span class="line">ls      <span class="comment">#命令行</span></span><br></pre></td></tr></table></figure></div><h2 id="运行脚本方法"><a class="markdownIt-Anchor" href="#运行脚本方法"></a> 运行脚本方法</h2><p><em>注意，运行之前先赋予执行权限</em></p><p><code>chmod a+x test.sh</code></p><p><code>chmod 555 test.sh</code> 等</p><p><em>执行方案</em></p><ul><li><code>./test.sh</code></li><li><code>. test.sh</code></li><li><code>source test.sh</code></li></ul><p>输出<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/linux/090601.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/linux/090601.jpg" class="lazyload"></a></p><h1 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h1><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><ol><li><code>变量名和等号之间不能有空格</code>，首个字符不能以数字开头。</li><li>环境变量 —&gt; C语言全局变量</li><li>本地变量 —&gt; C语言局部变量</li><li>变量查找<code>env | grep $变量名</code></li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sh</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#例如查找变量名 </span></span><br><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line">VARIABLES=bin</span><br><span class="line">env | grep <span class="variable">$VARIABLES</span></span><br></pre></td></tr></table></figure></div><p>输出：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/linux/090602.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/linux/090602.jpg" class="lazyload"></a></p><ol start="5"><li><code>exprot</code> 输出到全局。</li></ol><ul><li>例如，上面定义的<code>VARIABLES</code>只是在局部的，如果到<code>test.sh</code>外运行，其无法执行，敲入<code>exprot VARIABLES</code>即可将其变成全局。</li></ul><ol start="6"><li><code>unset</code>删除全局。用法如上。</li></ol><h2 id="通配符及一些特殊变量"><a class="markdownIt-Anchor" href="#通配符及一些特殊变量"></a> 通配符及一些特殊变量</h2><ol><li><code>*</code>. 用于适配 0-∞个字符。例如 <em><u>*.sh</u></em></li><li><code>?</code>. 用于适配一个字符。例如 <em><u>*.sh</u></em></li><li><code>[]</code> . 用于适配括号中所有的字符。例如*<u>[b-z][b-z][b-z].sh</u>* 适配于<code>kjg.sh</code>.</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/linux/090603.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/linux/090603.jpg" class="lazyload"></a></p><ol start="4"><li><code>$n</code>.这里的<code>n</code>表示任何正整数</li></ol><h2 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> 数据类型</h2><ul><li>字符串 String</li></ul><h2 id="控制语句"><a class="markdownIt-Anchor" href="#控制语句"></a> 控制语句</h2><ul><li>if\else</li><li>switch\case</li><li>for\while</li></ul><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.chuyuxuan.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.chuyuxuan.top/tags/Linux/"/>
    
      <category term="Shell" scheme="https://blog.chuyuxuan.top/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>MIX-AUDIO 流程介绍</title>
    <link href="https://blog.chuyuxuan.top/2020/07/15/%E5%B0%8F%E6%8A%80%E8%83%BD/au%E4%BF%AE%E9%9F%B3%E8%BF%87%E7%A8%8B%E4%BB%8B%E7%BB%8D/"/>
    <id>https://blog.chuyuxuan.top/2020/07/15/%E5%B0%8F%E6%8A%80%E8%83%BD/au%E4%BF%AE%E9%9F%B3%E8%BF%87%E7%A8%8B%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-07-15T13:59:22.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="是真没想到啊"><a class="markdownIt-Anchor" href="#是真没想到啊"></a> 是真没想到啊！</h3><p>是真的没想到，我被一个粉丝催更催了<strong>一年多</strong>，对的，一年多了，截图为证：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au1.jpg" class="lazyload"></a><br>害，时间过得真的快，就这样一年就过去了。</p><p>正好现在有点时间，话不多说，进入正题。</p><h1 id="导入"><a class="markdownIt-Anchor" href="#导入"></a> 导入</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/140.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/140.gif" class="lazyload"></a></p><p>做一首歌曲<code>混音</code>，准确的来说是<code>贴唱</code>，（<s>大部分人都是贴唱</s>）也就是把<code>干音</code>与<code>伴奏</code>贴合，混合在一起，Mix成一首歌。那么到这里，当然少不了个人认为较重要的第三个元素<code>原曲</code>。下面我来一一为他们进行不是那么正经的科普。</p><h3 id="干音"><a class="markdownIt-Anchor" href="#干音"></a> 干音</h3><p>干音就是你要唱的部分声音，当然这里的声音也有要求。正如它的名字一样，得“<strong>干</strong>”，即<span style="border-bottom:2px dashed red;">没有环境噪音，没有喷麦，没有口水音，齿音等杂音。同时，保证录音格式的采样率，如符合人体生理的<code>44110hz</code>等，保证录音格式为<code>wav</code>未压缩文件等</span> [<s>划重点</s>😂]。这个时候你可能就会问了，**不就是录个音嘛，整这么多乱起八糟的格式干嘛？况且我就是一个破手机，能录制个啥呀，再说，我干音那些环境音啥的我也不知道咋弄，要是我知道，要你后期干嘛？**欸！🤪 瞧你这话说的，前期能省事儿就省事儿，不然后期可活活的累死，这个也是后期为啥通常收费贵的原因之一，因为别人帮你处理这些多费时费力哇。呃~扯的有点多哈。</p><h3 id="伴奏"><a class="markdownIt-Anchor" href="#伴奏"></a> 伴奏</h3><p>伴奏就是原歌曲消掉人声的部分了。国内最著名的伴奏网非<a href="http://5sing.kugou.com/index.html" target="_blank" rel="noopener"><code>5sing(http://5sing.kugou.com/)</code></a>莫属。只要不是特别偏僻的歌曲，上面都可以找到伴奏，若实在是没有，就需要扒谱，混编，中置声道等方法获得了。当然一般还是有的。</p><h3 id="原曲"><a class="markdownIt-Anchor" href="#原曲"></a> 原曲</h3><p>其实有了上面的<code>干音</code>和<code>伴奏</code>，就基本可以mix一首歌曲了，全名某歌就是这样。那这里提到的<code>原曲</code>,是为了方便找准节奏，音乐的切入点，以及Key。你也可以不要，除非你对这首歌曲掌握的特别熟悉。</p><p>好了！我们把上面导入后在Audition是这样子滴！<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au2.jpg" class="lazyload"></a></p><h1 id="人声处理"><a class="markdownIt-Anchor" href="#人声处理"></a> 人声处理</h1><p>接下来需要对录制的人声进行处理，包括但不限于<code>降噪</code>，<code>音量包络</code>，<code>声相包络</code>，<code>标准化</code>，<code>节奏对轨</code>等。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au3.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au4.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au4.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au5.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au5.jpg" class="lazyload"></a></p><ul><li><p><code>降噪</code>：因为声音是一种波，我们在小学二年级的时候就知道通过给声波加一个反向相同的声波可以达到“抵消”的效果，这也叫做波的反相。现在的主动降噪耳机差不多就是这样的。</p></li><li><p><code>音量包络</code>：主要是音量在各个位置的大小，利用包络线就类似关键帧一样，控制不同时间段音量的输出。</p></li><li><p><code>相位包络</code>：这个用于立体声的声音，调整声音的平衡。对单声道无效。</p></li><li><p><code>标准化</code>：使得整个工程文件里的声音处于统一，不会产生太大的落差。</p></li><li><p><code>节奏对轨</code>：卡点，卡节奏，能把干音与伴奏的拍子对准。主要通过拖动音量块即可。</p></li><li><p><code>其他</code>：这里就要具体音频具体分析了，不在做展开介绍。</p></li></ul><h1 id="美化"><a class="markdownIt-Anchor" href="#美化"></a> 美化</h1><p>其实这一步呢也算是在人声处理里面，只不过这里就是添加一些细节了，加了这些细节，能使你的声音能够更好的贴合原唱，或者达到自己想要的效果。这里就要使用一些人声激励插件了.关于什么是人声激励呢?你可以理解为欺骗大脑的行为哈哈哈.感兴趣的可以自行谷歌或者百度,这里不展开介绍了.</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/154.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/154.gif" class="lazyload"></a></p><h3 id="eqequalize均衡处理"><a class="markdownIt-Anchor" href="#eqequalize均衡处理"></a> EQ(Equalize)均衡处理</h3><p>EQ就是均衡器，它能把你干音里的某一些频段给处理掉．例如我们说话不经意间气流过大而导致的喷麦，一般在低频段，我们就可以把这个频段的音给消掉，从而改善喷麦带来对干音的影响．在AU中，我们可以借助跟高级的<code>频谱显示</code>来消除喷麦音.EQ 是整个人声处理三部曲中最重要的步骤之一.剩下的即<code>混响(reverberation)</code>和<code>压限(Compressor)</code>了.</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au6.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au6.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au7.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au7.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au8.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au8.jpg" class="lazyload"></a></p><h3 id="bbe-sonic-maximizer"><a class="markdownIt-Anchor" href="#bbe-sonic-maximizer"></a> BBE Sonic Maximizer</h3><p>需要说明的是,通常我们所说的BBE技术只是统称里的一个分支，实际上，BBE技术在面向不同应用的时候有不同的,而我们使用的BBE是最基础的一项人声激励器. 使用BBE之后,能让你的声音听起来更加的干净清爽.<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au9.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au9.jpg" class="lazyload"></a></p><h3 id="混响-reverberation"><a class="markdownIt-Anchor" href="#混响-reverberation"></a> 混响 reverberation</h3><p>混响我就不用过多解释了,毕竟日常生活见的也多,比如KTV的回音,对着大山峰喊一句&quot;我!宣!你!“时山峰回响&quot;我! <s>也!</s> 宣!你!”,教导主任在操场上对着全体学生训话的时候等等.这些场景相比都有接触吧. 那么我们使用混响呢就是为了掩盖声音的单薄,听起来不是那么的苍白无力.像一些弦乐,基本都有混响. 混响也分很多种,这里你听着怎么舒服怎么调整.<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au10.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au10.jpg" class="lazyload"></a></p><h3 id="修音"><a class="markdownIt-Anchor" href="#修音"></a> 修音</h3><p>这一步主要是修正<code>音准</code>, <code>音高</code>以及<code>音长</code>.当然,到这里需要有一定的乐理知识了,有一定的门槛,通常的修音插件除了<code>Antares Auto tune</code>,还有B站鬼畜区经常使用的<code>Melodyne</code>,当然还有waves旗下的<code>waves tune</code>等等,使用修音插件主要是处理<code>跑调</code>的问题,比如一首歌的某一句是升C ,但是你唱成降C ,这个时候就需要拉回来.当然也不能修的太过,太过了就会导致电音.</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au11.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au11.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au12.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au12.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au13.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au13.jpg" class="lazyload"></a></p><h3 id="和声"><a class="markdownIt-Anchor" href="#和声"></a> 和声</h3><p>这一步是美化声音的,比方说根据<code>音程</code>，唱和弦。<code>C、E、G</code>就是一个大三度和弦，当你的曲子在E调上时，唱C调或G调为其配和弦。其实生活中还是蛮多的和声的，合唱的时候就有和声。</p><h3 id="压限"><a class="markdownIt-Anchor" href="#压限"></a> 压限</h3><p>简单点来说，就是防止你的声音过电平而出现爆音，非常不和谐。压制声音的大小，给它一个阈值。压限是十分重要的，因为有时候一些软件的解析力度很差，从而导致声音失真，压限可以防止这一点。关于更多的压限理论，感兴趣的可以自行谷歌或者百度,这里不展开介绍了.</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au14.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au14.jpg" class="lazyload"></a></p><h3 id="mix-缩混"><a class="markdownIt-Anchor" href="#mix-缩混"></a> MIX 缩混</h3><p>到这一步就是把多轨融合啦，记得要把效果给应用嗷。！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/138.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/138.gif" class="lazyload"></a></p><h3 id="母带"><a class="markdownIt-Anchor" href="#母带"></a> 母带</h3><p>简单来说，就是最后处理，能够把之前没修好的效果进一步的更改，母带也是十分重要的，如果不做母带，那么可能会出现压限时的情况等等。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au15.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/daily/au15.jpg" class="lazyload"></a></p><h1 id="结尾"><a class="markdownIt-Anchor" href="#结尾"></a> 结尾</h1><p>做完最后母带，我们就可以发布歌曲了。发布到某吧，某全名，一切你喜欢的地方，收获鲜花和掌声吧。切记，后期只是给声音锦上添花，最终的实力，还得靠自己先天的练习。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="小技能" scheme="https://blog.chuyuxuan.top/categories/%E5%B0%8F%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="混音" scheme="https://blog.chuyuxuan.top/tags/%E6%B7%B7%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title>windows_terminal配置到右键菜单</title>
    <link href="https://blog.chuyuxuan.top/2020/06/14/%E5%B0%8F%E6%8A%80%E8%83%BD/windows-terminal/"/>
    <id>https://blog.chuyuxuan.top/2020/06/14/%E5%B0%8F%E6%8A%80%E8%83%BD/windows-terminal/</id>
    <published>2020-06-14T08:04:13.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>不得不说，这个<code>window</code>下的<code>terminal</code>颜值就是耐看，比起<code>cmd</code>里那中点阵字体，<code>power shell</code>那个蓝的发吐的背景，<code>Windows terminal</code>可以说是我审美的救星。所以，当我在windows下执行一些命令时，更多的是用<code>terminal</code>而不是<code>cmd</code>。直接快捷键<code>win+R</code>，输入<code>wt</code>(注意，这里是我把它命名为wt,当然你可以设置自己喜欢的字母运行terminal，就像输入cmd一样)。但是这样又会有些麻烦，如果能像<code>power shell</code>一样按住<code>shift+右键</code>在此处打开就好了。这里从GitHub看到一个牛逼的<a href="https://github.com/microsoft/terminal/issues/1060#issuecomment-497539461" target="_blank" rel="noopener"><code>国人大佬</code></a>的回答，为了防止以后的自己忘记如何配置，故今天写此文记录。</p><h1 id="第一步"><a class="markdownIt-Anchor" href="#第一步"></a> 第一步</h1><p><code>安装terminal</code></p><ul><li><p><a href="https://www.microsoft.com/zh-cn/p/windows-terminal-preview/9n0dx20hk701?activetab=pivot:overviewtab" target="_blank" rel="noopener">微软商店</a> <a href="https://www.microsoft.com/zh-cn/p/windows-terminal-preview/9n0dx20hk701?activetab=pivot:overviewtab" target="_blank" rel="noopener">https://www.microsoft.com/zh-cn/p/windows-terminal-preview/</a></p></li><li><p><a href="https://github.com/microsoft/terminal" target="_blank" rel="noopener">GitHub自编译</a> <a href="https://github.com/microsoft/terminal" target="_blank" rel="noopener">https://github.com/microsoft/terminal</a></p></li></ul><h1 id="第二步"><a class="markdownIt-Anchor" href="#第二步"></a> 第二步</h1><p><code>测试你路径是否正确</code></p><ul><li>打开<code>cmd</code>，输入以下代码，<strong>若如果能够返回注释的内容，说明路径没有问题，若如果有问题，接下来就直接手动进入路径安装即可。</strong></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cmd</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%USERPROFILE%</span></span><br><span class="line"></span><br><span class="line"># 返回 C:\Users\[你的账户名字]</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%LOCALAPPDATA%</span></span><br><span class="line"></span><br><span class="line"># 返回 C:\Users\[你的账户名字]\AppData\Local</span><br></pre></td></tr></table></figure></div><h1 id="第三步"><a class="markdownIt-Anchor" href="#第三步"></a> 第三步</h1><p><code>创建图标目录</code></p><ul><li>若以上返回正确，我们需要创建一个文件夹用来放置<code>terminal</code>的图标.</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cmd</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> "<span class="variable">%USERPROFILE%</span>\AppData\Local\terminal"</span><br></pre></td></tr></table></figure></div><ul><li><p>下载图标放置该目录</p><p>这里采取<code>ico</code>格式即可，注意不要太大，图标可以从<a href="https://www.iconfont.cn/" target="_blank" rel="noopener"><code>iconfont</code></a>进行下载。放置在<code>C:\Users\[你的账户名字]\AppData\Local\terminal</code>路径下。</p></li></ul><h1 id="第四步"><a class="markdownIt-Anchor" href="#第四步"></a> 第四步</h1><p><code>创建注册表文件</code></p><ul><li>打开记事本，新建一个<code>wt.reg</code>的空文件，并且在其中输入以下代码：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">re</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight re"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span></span><br><span class="line"></span><br><span class="line"><span class="literal">[HKEY<span class="identifier">_CLASSES_ROOT</span>\D<span class="identifier">irectory</span>\B<span class="identifier">ackground</span>\<span class="identifier">shell</span>\<span class="identifier">wt</span>]</span></span><br><span class="line">@=<span class="string">"在此处打开terminal"</span></span><br><span class="line"><span class="string">"Icon"</span>=<span class="string">"%USERPROFILE%\\AppData\\Local\\terminal\\wt_32.ico"</span></span><br><span class="line"></span><br><span class="line"><span class="literal">[HKEY<span class="identifier">_CLASSES_ROOT</span>\D<span class="identifier">irectory</span>\B<span class="identifier">ackground</span>\<span class="identifier">shell</span>\<span class="identifier">wt</span>\<span class="identifier">command</span>]</span></span><br><span class="line">@=<span class="string">"%LOCALAPPDATA%\\Microsoft\\WindowsApps\\wt.exe"</span></span><br></pre></td></tr></table></figure></div><ul><li>用管理员权限运行该注册表文件</li></ul><p><strong>注意： 你可以修改注册表中的代码，把terminal改成你想要的名字或者打开方式。</strong></p><h1 id="第五步"><a class="markdownIt-Anchor" href="#第五步"></a> 第五步</h1><p><code>修改terminal启动方式</code></p><ul><li>打开terminal，进入设置。</li></ul><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/linux/Windows_Terminal_setting.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/linux/Windows_Terminal_setting.png" class="lazyload"></a></p><ul><li>修改 <code>Windows Terminal</code> 的 <code>profile.json</code> ,把 <code>startingDirectory</code>改为<code>null</code>, 没有的自己创建一个。</li></ul><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/linux/Windows_Terminal.setting_edit.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/linux/Windows_Terminal.setting_edit.png" class="lazyload"></a></p><h1 id="第六步"><a class="markdownIt-Anchor" href="#第六步"></a> 第六步</h1><p><code>开始享用吧！</code></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/linux/2020615.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/linux/2020615.jpg" class="lazyload"></a></p><p>附加： terminal颜色配置仓库<a href="https://github.com/mbadolato/iTerm2-Color-Schemes" target="_blank" rel="noopener">https://github.com/mbadolato/iTerm2-Color-Schemes</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="小技能" scheme="https://blog.chuyuxuan.top/categories/%E5%B0%8F%E6%8A%80%E8%83%BD/"/>
    
    
      <category term="window terminal" scheme="https://blog.chuyuxuan.top/tags/window-terminal/"/>
    
  </entry>
  
  <entry>
    <title>基于socket.io开发的在线聊天网站</title>
    <link href="https://blog.chuyuxuan.top/2020/05/26/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E4%BA%8Esocket.io%E5%BC%80%E5%8F%91%E7%9A%84%E8%BD%AF%E4%BB%B6/"/>
    <id>https://blog.chuyuxuan.top/2020/05/26/%E5%89%8D%E7%AB%AF/%E5%9F%BA%E4%BA%8Esocket.io%E5%BC%80%E5%8F%91%E7%9A%84%E8%BD%AF%E4%BB%B6/</id>
    <published>2020-05-26T04:30:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="一-这里不是在项目介绍"><a class="markdownIt-Anchor" href="#一-这里不是在项目介绍"></a> 一、这里不是在项目介绍</h1><p>呃。三周前吧，我们的<code>Internet Web编程</code>这门课程就结束了，就教一些<code>Html</code>、<code>Css</code>、<code>Javascript</code>等等。嘛，这些自己大一的时候就差不多会了的东西现在学起来可所谓非常轻松。<strong>当然</strong> ，出了这些，还有一些被现在抛弃的技术：<code>javaweb</code> 。其实所谓的抛弃嘛就是他并不符合现在的前后端分离的大趋势，当然，代码的<code>耦合性</code>也是十分高的。当初html文件里嵌套<code>&lt;%%&gt;</code>以及<code>java</code>代码可所谓嵌套的自己很烦躁，可想而知，那个还在<code>jsp</code>一统天下的年代，程序员要想完成一个企业级的项目得多么痛苦，这种情况下阿里的淘宝能起来真的是很牛逼很牛逼了！👍</p><p>当然，自己为了本次课设能稍微有点拿得出手的家伙，就从网络上各种收集资料，各种学习，马马虎虎的敲出来个大概，可能这个项目在一些大佬眼里看来就是一个最基本的小儿科哈哈哈😂.我也就当作一个阶段似的放在<a href="https://github.com/Chuyuxuan0v0/webchat" target="_blank" rel="noopener">Github</a>上面吧，可能多年以后回想起来看看看这个代码也会心里暗自发笑哈哈哈。这个项目花了一周多左右的时间吧，<code>主要是自己菜的离谱，得慢慢一个一个的学</code>。像在考虑后端使用<code>spring BOOT</code>的时候，那么能不能不用Java去写呀，于是便转到<code>node.js</code>上来了，<s>Java好久没有去碰了，生疏了🤣。</s> 这点又间接说明了熟能生巧。</p><h1 id="二-这里是在项目介绍复制readme"><a class="markdownIt-Anchor" href="#二-这里是在项目介绍复制readme"></a> 二、这里是在项目介绍(复制readme)</h1><div class="note info">            <h2 id="webchat"><a class="markdownIt-Anchor" href="#webchat"></a> webchat</h2><p>一款基于<code>Javascript+express+socket.io</code>构成的网络在线聊天应用</p><p>具体效果可以访问<a href="http://chat.chuyuxuan.xyz:4400" target="_blank" rel="noopener">http://chat.chuyuxuan.xyz:4400</a></p><ul><li><strong>2020年10月10日前该链接有效，别问为啥，问就是服务器过期我负担不起😭，所以不错的话请给个star吧</strong></li></ul><h3 id="项目讲解"><a class="markdownIt-Anchor" href="#项目讲解"></a> 项目讲解：</h3><iframe src="//player.bilibili.com/player.html?aid=840786560&bvid=BV1B54y1D7dA&cid=195091993&page=1" height="600" width="800" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><h2 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h2><pre><code>    git clone https://github.com/Chuyuxuan0v0/webchat.git</code></pre><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><ul><li>你需要安装<code>node.js</code>,接下来才能进行一下操作，否则会报错误。</li></ul><p>⭐ 下载后进入根目录</p><pre><code>    cd ...  \webchat\</code></pre><p>⭐ 下载安装<code>node.js</code></p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">点我下载</a></p><p>⭐ 安装<code>express</code> <s>项目包里已经集成，安装好node之后可以跳过</s></p><pre><code>    npm install express --save</code></pre><p>⭐ 安装<code>socket.io</code> <s>项目包里已经集成，安装好node之后可以跳过</s></p><pre><code>    npm install --save socket.io    npm install --save socket.io-client</code></pre><p>⭐ 安装<code>mysql</code> <s>项目包里已经集成，安装好node之后可以跳过</s></p><pre><code>    npm install mysql</code></pre><p>⭐ 在MySQL中导入相关表</p><ul><li>所有要建立的表我都放在express.sql里了，可以根据里面的sql语言自行建立</li><li>或者借用数据库管理工具例如 navicat 导入该文件进行表的创建。<br><strong>注意。我是依赖于mysql 8.0的版本而创建的表格，如果你的sql文件导入不成功，请手动创建表</strong><br>部分表格目录如下:</li></ul><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left">user_info</th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">名</td><td style="text-align:left">类型</td><td style="text-align:left">长度</td><td style="text-align:left">小数点</td><td style="text-align:left">不是null</td><td style="text-align:left">主键</td><td style="text-align:left">注释</td></tr><tr><td style="text-align:left">id</td><td style="text-align:left">int</td><td style="text-align:left">5</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left">🔑</td><td style="text-align:left">注册用户数，注意，要选择自增</td></tr><tr><td style="text-align:left">name</td><td style="text-align:left">varchar</td><td style="text-align:left">15</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">用户名</td></tr><tr><td style="text-align:left">avatar</td><td style="text-align:left">varchar</td><td style="text-align:left">100</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">头像路径</td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">varchar</td><td style="text-align:left">20</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">日期</td></tr></tbody></table><table><thead><tr><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left">user_msg</th><th style="text-align:left"></th><th style="text-align:left"></th><th style="text-align:left"></th></tr></thead><tbody><tr><td style="text-align:left">名</td><td style="text-align:left">类型</td><td style="text-align:left">长度</td><td style="text-align:left">小数点</td><td style="text-align:left">不是null</td><td style="text-align:left">主键</td><td style="text-align:left">注释</td></tr><tr><td style="text-align:left">id</td><td style="text-align:left">int</td><td style="text-align:left">5</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left">🔑</td><td style="text-align:left">注意，要选择自增</td></tr><tr><td style="text-align:left">user</td><td style="text-align:left">varchar</td><td style="text-align:left">15</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">用户名</td></tr><tr><td style="text-align:left">avatar</td><td style="text-align:left">varchar</td><td style="text-align:left">100</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">头像路径</td></tr><tr><td style="text-align:left">msg</td><td style="text-align:left">varchar</td><td style="text-align:left">255</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">用户消息</td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">varchar</td><td style="text-align:left">20</td><td style="text-align:left">0</td><td style="text-align:left">√</td><td style="text-align:left"></td><td style="text-align:left">日期</td></tr></tbody></table><p><em>数据表会不定时更新，详情请看代码里的链接</em></p><p>⭐ 启动项目</p><pre><code>    node app.js</code></pre><p>⭐ 在浏览器中输入以下网址 <s>这个端口可以自己更改的</s></p><pre><code>    localhost:4400 </code></pre><h2 id="部分功能展示"><a class="markdownIt-Anchor" href="#部分功能展示"></a> 部分功能展示</h2><ul><li>1.可以实现在线聊天，发送图片</li><li>2.可以是使用<code>ctrl+Enter</code>发送消息</li><li>3.进入退出有提示</li><li>4.适应手机，有响应式布局</li><li>5.查看历史聊天记录</li><li>6.。。。。。</li></ul><h2 id="待优化"><a class="markdownIt-Anchor" href="#待优化"></a> 待优化</h2><ul><li>优化UI界面，降低耦合性</li><li>优化界面响应速度</li><li>能够私聊个人，一对一聊天</li><li>。。。。。</li></ul><h2 id="部分预览"><a class="markdownIt-Anchor" href="#部分预览"></a> 部分预览</h2><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover1.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover1.jpg" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover2.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover2.jpg" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover3.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/gitee/cover3.jpg" class="lazyload"></a></p>          </div><h1 id="三-这里是结尾"><a class="markdownIt-Anchor" href="#三-这里是结尾"></a> 三、这里是结尾</h1><p>快6月了，也就几天了，当初的目标正在努力中，真的，只要别放弃就行。加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="socket.io" scheme="https://blog.chuyuxuan.top/tags/socket-io/"/>
    
      <category term="websocket" scheme="https://blog.chuyuxuan.top/tags/websocket/"/>
    
      <category term="node.js" scheme="https://blog.chuyuxuan.top/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Linux 安装 nginx</title>
    <link href="https://blog.chuyuxuan.top/2020/05/15/Linux/linux%E9%83%A8%E7%BD%B2nginx/"/>
    <id>https://blog.chuyuxuan.top/2020/05/15/Linux/linux%E9%83%A8%E7%BD%B2nginx/</id>
    <published>2020-05-15T00:08:08.000Z</published>
    <updated>2021-02-08T04:12:44.308Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="手把手教你把自己的静态项目部署到服务器上"><a class="markdownIt-Anchor" href="#手把手教你把自己的静态项目部署到服务器上"></a> 手把手教你把自己的静态项目部署到服务器上</h1><p>自己写数学作业写的是在是烦躁，干脆找个东西来<code>放松</code>以下,于是就出了这期视频。<br>y</p><ul><li><p>视频地址：<a href="https://www.bilibili.com/video/BV1Ha4y1e72M" target="_blank" rel="noopener">BV1Ha4y1e72M</a></p></li><li><p>视频中的网站：<a href="http://video.chuyuxuan.xyz/" target="_blank" rel="noopener">Video.chuyuxuan.xyz</a> <code>有小彩蛋哦！</code></p></li></ul><iframe src="//player.bilibili.com/player.html?aid=668236157&bvid=BV1Ha4y1e72M&cid=191086854&page=1" height="600" width="900" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://blog.chuyuxuan.top/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://blog.chuyuxuan.top/tags/Linux/"/>
    
      <category term="centOS" scheme="https://blog.chuyuxuan.top/tags/centOS/"/>
    
      <category term="nginx" scheme="https://blog.chuyuxuan.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>无言</title>
    <link href="https://blog.chuyuxuan.top/2020/05/08/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020%E5%B9%B45%E6%9C%888%E6%97%A5/"/>
    <id>https://blog.chuyuxuan.top/2020/05/08/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/2020%E5%B9%B45%E6%9C%888%E6%97%A5/</id>
    <published>2020-05-08T10:19:24.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码不正确不给你看哦！" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入密码</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c3c7395fa5483ff9511062c7c03d826a168df1761b39de1ed5facc80a10e7df4"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Here&#39;s something encrypted, password is required to continue reading.
    
    </summary>
    
    
      <category term="生活日常" scheme="https://blog.chuyuxuan.top/categories/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="随笔" scheme="https://blog.chuyuxuan.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>IEDA配置Tomcat创建web项目</title>
    <link href="https://blog.chuyuxuan.top/2020/04/15/%E5%89%8D%E7%AB%AF/%E8%AE%B0%E5%BD%95IEDA%E9%85%8D%E7%BD%AE/"/>
    <id>https://blog.chuyuxuan.top/2020/04/15/%E5%89%8D%E7%AB%AF/%E8%AE%B0%E5%BD%95IEDA%E9%85%8D%E7%BD%AE/</id>
    <published>2020-04-15T04:30:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="吐槽"><a class="markdownIt-Anchor" href="#吐槽"></a> 吐槽</h1><p>讲真，要不是学校要求学，我是不会碰<code>jsp</code>这项技术的。就类似于<a href="https://chuyuxuan.xyz/2020/04/06/%E2%96%B6%E5%89%8D%E7%AB%AF/jQuery/jQuery%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener"><em>jQuery</em></a>一样。耦合性强，前后端不分离，这些不适合现在了。但听一些前辈们说仍然有一小部分公司还在用这项技术。当然，包括我们学校的官网。不过吐槽归吐槽，学分摆在那里，你不得不去写。什么？不想？不想学还看我这篇文章干嘛~</p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/shakinghead.png" data-fancybox="group" data-caption="shakinghead " class="fancybox"><img alt="shakinghead " title="shakinghead " data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/shakinghead.png" class="lazyload"></a><h1 id="安装"><a class="markdownIt-Anchor" href="#安装"></a> 安装</h1><ul><li>下载<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-9/v9.0.34/bin/apache-tomcat-9.0.34.exe" target="_blank" rel="noopener"><em>Tomcat</em></a></li></ul><p>这里我是直接外链到<code>win10</code>环境直装的<code>tomcat 9.0</code>，如果你使用的是<code>MacOS</code>或者<code>Linux</code>。稍微抱歉一下。</p><div class="note danger">            <p>注意，安装路径请确保你有足够的权限访问，否则后面会出现环境运行无权限。<font style="font-weight:bold;color:red;">建议默认安装在C盘。</font></p>          </div><p>具体安装步骤我这里就不给出了，可以自行<a href="https://www.google.com" target="_blank" rel="noopener"><em>Google</em></a>。唯一要注意一点的是端口号没有特别的需求默认<code>8080</code>端口即可。</p><h1 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h1><ul><li>我的IEDA版本是2019.1.3</li></ul><ol><li>打开<code>IEDA</code>，新建一个<code>空项目</code>。并且给命名。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/1.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/1.gif" class="lazyload"></a></p><ol start="2"><li>创建好了JavaWeb项目要配置一下文件夹路径，首先在<code>web/WEB-INF</code>文件夹下面创建两个文件夹：<code>class</code>和<code>lib</code>.<code>class</code>用来存放编译后输出的<code>classes</code>文件，<code>lib</code>用于存放第三方的<code>jar</code>包。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/2.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/2.gif" class="lazyload"></a></p><ol start="3"><li><code>File</code>=&gt;<code>Project Structure</code>=&gt;<code>Module</code>=&gt;<code>Paths</code>=&gt;<code>Use module compile output path</code> ，点击后面的<code>...</code>将<code>Output path</code>和<code>Test output path</code>都选择刚刚创建的<code>class</code>文件夹,点击<code>Apply</code>。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/3.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/3.gif" class="lazyload"></a></p><ol start="4"><li>接着选择<code>Dependencies</code> ,将<code>Module SDK</code>选择为自己的<code>JDK</code>. 点击右边的<code>“+”</code>号 ,选择<code>Jars or Directories</code>。配置到刚刚创建好的<code>lib</code>文件中。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/4.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/4.gif" class="lazyload"></a></p><ol start="5"><li>打开菜单<code>Run</code> 选择<code>Edit Configuration</code>也可以点击右上方的往下的三角旁边的白框框选择<code>Edit Configuration</code>,点击<code>“+”</code>号选择<code>Tomcat Server</code>,选择<code>Local</code>。在<code>Name</code>处创建<code>Tomcat</code>名字，点击<code>Application server</code>后面的<code>Configure...</code>，弹出<code>Tomcat Server</code>窗口，选择本地安装的<code>Tomcat</code>文件路径. 设置<code>HTTP port</code>和<code>JMX port</code>（默认值即可），点击 <code>Apply</code>.</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/5.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/5.gif" class="lazyload"></a></p><ol start="6"><li>至此Tomcat配置完成。 下一步在Tomcat中部署并运行项目 <code>Run</code> , <code>Edit Configurations</code>，进入<code>Run/Debug Configurations</code>窗口 ,选择刚刚建立的Tomcat容器,选择<code>Deployment</code>,点击右边的<code>“+”</code>号 ,选择<code>Artifact</code>,选择<code>web</code>项目,<code>Application contex</code>填一个名字。注意，tomcat的路径需要手动在<code>startup/Connection</code>中配置好。</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/6.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/6.gif" class="lazyload"></a></p><h1 id="运行"><a class="markdownIt-Anchor" href="#运行"></a> 运行</h1><ol start="7"><li>好啦！来运行项目看看！选择<code>index.jsp</code>，修改里面的代码内容，嘻嘻！成功运行！</li></ol><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/7.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Java_web/7.gif" class="lazyload"></a></p><h1 id="问题可能出现"><a class="markdownIt-Anchor" href="#问题可能出现"></a> 问题（可能出现）</h1><div class="note danger">            <p>注意，若出现：<code>Error running 'Tomcat 8.5.45': port out of range:-1 &amp;&amp; 淇℃伅 [main] org.apache.catalina</code>。</p><ul><li><p>请在<code>tomcat</code>安装目录下进入<code>conf/server.xml</code> ，把里面的<code>sever port = &quot;-1&quot;</code>改成1028（大于1024不等于8080即可）。</p></li><li><p>修改logging.properties 文件里面的<code>java.util.logging.ConsoleHandler.encoding = UTF-8</code>为<code>java.util.logging.ConsoleHandler.encoding = GBK</code></p></li></ul>          </div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="tomcat" scheme="https://blog.chuyuxuan.top/tags/tomcat/"/>
    
      <category term="IDEA" scheme="https://blog.chuyuxuan.top/tags/IDEA/"/>
    
      <category term="Java Web" scheme="https://blog.chuyuxuan.top/tags/Java-Web/"/>
    
  </entry>
  
  <entry>
    <title>全屏预览插件及其属性</title>
    <link href="https://blog.chuyuxuan.top/2020/04/12/%E5%89%8D%E7%AB%AF/jQuery%E5%85%A8%E5%B1%8F%E9%A2%84%E8%A7%88/"/>
    <id>https://blog.chuyuxuan.top/2020/04/12/%E5%89%8D%E7%AB%AF/jQuery%E5%85%A8%E5%B1%8F%E9%A2%84%E8%A7%88/</id>
    <published>2020-04-12T13:00:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="算得上是前言"><a class="markdownIt-Anchor" href="#算得上是前言"></a> 算得上是前言</h1><p><font color="#0ff"><s>*再不开学我要被家里人嫌弃死了。*🤣</s></font></p><p>无意间闲逛<code>iPhone11</code>的<a href="https://www.apple.com.cn/iphone-11-pro/" target="_blank" rel="noopener">官网</a>时，<s>当然是闲的蛋疼</s> 被它的宣传广告给深深吸引。全程我震惊不断：卧槽，这个动画可以这样玩？欸？！视频直接进入动画了？！6666！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/amazing.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/amazing.png" class="lazyload"></a><br>不得不感叹苹果不愧是业界大佬，钦佩钦佩。我只会<s>面向GitHub编程</s>。这不，最近几天在研究<code>jQuery</code>，突然就搜到了这个全屏滚动插件，效果是真的棒！我表示很喜欢！感谢作者！！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/20200412.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/20200412.gif" class="lazyload"></a></p><h1 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h1><p>1.正如上图所示，可以实现全屏滚动，这个视觉冲击可以说是杠杠的，我们只需要到GitHub上clone仓库即可。</p><p>仓库地址：<a href="https://github.com/alvarotrigo/fullPage.js" target="_blank" rel="noopener">点我访问</a></p><p><a href="https://s1.ax1x.com/2020/04/12/GOOsPI.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://s1.ax1x.com/2020/04/12/GOOsPI.gif" class="lazyload"></a></p><p>2.把<code>dist</code>里的文件分别按<code>js</code>,<code>css</code>分类放置到你的项目文件中。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004121.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004121.jpg" class="lazyload"></a></p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004122.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/202004122.jpg" class="lazyload"></a></p><p>3.在<code>html</code>文件中引入以下代码即可食用啦！</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/watermaleon.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/laugh/watermaleon.png" class="lazyload"></a></p><h1 id="官方介绍"><a class="markdownIt-Anchor" href="#官方介绍"></a> 官方介绍</h1><p>国内演示地址：<a href="https://www.dowebok.com/demo/2014/77/" target="_blank" rel="noopener">点我访问</a></p><h2 id="fullpagejs-是一个基于-jquery-的插件它能够很方便-很轻松的制作出全屏网站主要功能有"><a class="markdownIt-Anchor" href="#fullpagejs-是一个基于-jquery-的插件它能够很方便-很轻松的制作出全屏网站主要功能有"></a> fullPage.js 是一个基于 jQuery 的插件，它能够很方便、很轻松的制作出全屏网站，主要功能有：</h2><ul><li>支持鼠标滚动</li><li>支持前进后退和键盘控制</li><li>多个回调函数</li><li>支持手机、平板触摸事件</li><li>支持 CSS3 动画</li><li>支持窗口缩放</li><li>窗口缩放时自动调整</li><li>可设置滚动宽度、背景颜色、滚动速度、循环选项、回调、文本对齐方式等等</li></ul><h2 id="兼容性"><a class="markdownIt-Anchor" href="#兼容性"></a> 兼容性</h2><p>兼容 jQuery 1.7+。</p><h3 id="浏览器兼容"><a class="markdownIt-Anchor" href="#浏览器兼容"></a> 浏览器兼容</h3><table><thead><tr><th style="text-align:center">IE</th><th style="text-align:center">Chrome</th><th style="text-align:center">Firefox</th><th style="text-align:center">Opera</th><th style="text-align:center">Safari</th></tr></thead><tbody><tr><td style="text-align:center">IE8+ ✔</td><td style="text-align:center">Chrome ✔</td><td style="text-align:center">Firefox ✔</td><td style="text-align:center">Opera ✔</td><td style="text-align:center">Safari ✔</td></tr></tbody></table><h2 id="引入文件"><a class="markdownIt-Anchor" href="#引入文件"></a> 引入文件</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/jquery.fullPage.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jquery.easings.min.js 用于 easing 参数，也可以使用完整的 jQuery UI 代替，如果不需要设置 easing 参数，可去掉改文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.easings.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果 scrollOverflow 设置为 true，则需要引入 jquery.slimscroll.min.js，一般情况下不需要 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.slimscroll.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery.fullPage.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="html"><a class="markdownIt-Anchor" href="#html"></a> html</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dowebok"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第一屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第二屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第三屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>第四屏<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>每个<code>section</code>代表一屏，默认显示<code>“第一屏”</code>，如果要指定加载页面时显示的<code>“屏幕”</code>，可以在对应的 <code>section</code>加上 <code>class=”active”</code>，如：</p><pre><code>&lt;div class=&quot;section active&quot;&gt;第三屏&lt;/div&gt;</code></pre><p>同时，可以在<code>section</code> 内加入 <code>slide</code>，如：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"dowebok"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>第一屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>第二屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第一屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第二屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第三屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slide"</span>&gt;</span>第三屏的第四屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"section"</span>&gt;</span>第四屏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> JavaScript</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">'#dowebok'</span>).fullpage();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="配置"><a class="markdownIt-Anchor" href="#配置"></a> 配置</h2><h3 id="选项"><a class="markdownIt-Anchor" href="#选项"></a> 选项</h3><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">类型</th><th style="text-align:center">默认值</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">verticalCentered</td><td style="text-align:center">字符串</td><td style="text-align:center">true</td><td style="text-align:center">内容是否垂直居中</td></tr><tr><td style="text-align:center">resize</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">字体是否随着窗口缩放而缩放</td></tr><tr><td style="text-align:center">slidesColor</td><td style="text-align:center">函数</td><td style="text-align:center">无</td><td style="text-align:center">设置背景颜色</td></tr><tr><td style="text-align:center">anchors</td><td style="text-align:center">数组</td><td style="text-align:center">无</td><td style="text-align:center">定义锚链接</td></tr><tr><td style="text-align:center">scrollingSpeed</td><td style="text-align:center">整数</td><td style="text-align:center">700</td><td style="text-align:center">滚动速度，单位为毫秒</td></tr><tr><td style="text-align:center">easing</td><td style="text-align:center">字符串</td><td style="text-align:center"></td><td style="text-align:center">easeInQuart滚动动画方式</td></tr><tr><td style="text-align:center">menu</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">绑定菜单，设定的相关属性与 anchors 的值对应后，菜单可以控制滚动</td></tr><tr><td style="text-align:center">navigation</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否显示项目导航</td></tr><tr><td style="text-align:center">navigationPosition</td><td style="text-align:center">字符串</td><td style="text-align:center">right</td><td style="text-align:center">项目导航的位置，可选 left 或 right</td></tr><tr><td style="text-align:center">navigationColor</td><td style="text-align:center">字符串</td><td style="text-align:center">#000</td><td style="text-align:center">项目导航的颜色</td></tr><tr><td style="text-align:center">navigationTooltips</td><td style="text-align:center">数组</td><td style="text-align:center">空</td><td style="text-align:center">项目导航的 tip</td></tr><tr><td style="text-align:center">slidesNavigation</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否显示左右滑块的项目导航</td></tr><tr><td style="text-align:center">slidesNavPosition</td><td style="text-align:center">字符串</td><td style="text-align:center">bottom</td><td style="text-align:center">左右滑块的项目导航的位置，可选 top 或 bottom</td></tr><tr><td style="text-align:center">controlArrowColor</td><td style="text-align:center">字符串</td><td style="text-align:center">#fff</td><td style="text-align:center">左右滑块的箭头的背景颜色</td></tr><tr><td style="text-align:center">loopBottom</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">滚动到最底部后是否滚回顶部</td></tr><tr><td style="text-align:center">loopTop</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">滚动到最顶部后是否滚底部</td></tr><tr><td style="text-align:center">loopHorizontal</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center">左右滑块是否循环滑动</td></tr><tr><td style="text-align:center">autoScrolling</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center">是否使用插件的滚动方式，如果选择 false，则会出现浏览器自带的滚动条、</td></tr><tr><td style="text-align:center">scrollOverflow</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">内容超过满屏后是否显示滚动条</td></tr><tr><td style="text-align:center">css3</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否使用 CSS3 transforms 滚动</td></tr><tr><td style="text-align:center">paddingTop</td><td style="text-align:center">字符串</td><td style="text-align:center">0</td><td style="text-align:center">与顶部的距离</td></tr><tr><td style="text-align:center">paddingBottom</td><td style="text-align:center">字符串</td><td style="text-align:center">0</td><td style="text-align:center">与底部距离</td></tr><tr><td style="text-align:center">fixedElements</td><td style="text-align:center">字符串</td><td style="text-align:center">无</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">normalScrollElements</td><td style="text-align:center">无</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">keyboardScrolling</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center">是否使用键盘方向键导航</td></tr><tr><td style="text-align:center">touchSensitivity</td><td style="text-align:center">整数</td><td style="text-align:center">5</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">continuousVertical</td><td style="text-align:center">布尔值</td><td style="text-align:center">false</td><td style="text-align:center">是否循环滚动，与 loopTop 及 loopBottom 不兼容</td></tr><tr><td style="text-align:center">animateAnchor</td><td style="text-align:center">布尔值</td><td style="text-align:center">true</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">normalScrollElementTouchThreshold</td><td style="text-align:center">整数</td><td style="text-align:center">5</td><td style="text-align:center"></td></tr></tbody></table><h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">moveSectionUp()</td><td style="text-align:center">向上滚动</td></tr><tr><td style="text-align:center">moveSectionDown()</td><td style="text-align:center">向下滚动</td></tr><tr><td style="text-align:center">moveTo(section, slide)</td><td style="text-align:center">滚动到</td></tr><tr><td style="text-align:center">moveSlideRight()</td><td style="text-align:center">slide向右滚动</td></tr><tr><td style="text-align:center">moveSlideLeft()</td><td style="text-align:center">slide 向左滚动</td></tr><tr><td style="text-align:center">setAutoScrolling()</td><td style="text-align:center">设置页面滚动方式，设置为 true 时自动滚动</td></tr><tr><td style="text-align:center">setAllowScrolling()</td><td style="text-align:center">添加或删除鼠标滚轮/触控板控制</td></tr><tr><td style="text-align:center">setKeyboardScrolling()</td><td style="text-align:center">添加或删除键盘方向键控制</td></tr><tr><td style="text-align:center">setScrollingSpeed()</td><td style="text-align:center">定义以毫秒为单位的滚动速度</td></tr></tbody></table><h3 id="回调函数"><a class="markdownIt-Anchor" href="#回调函数"></a> 回调函数</h3><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">afterLoad</td><td style="text-align:center">滚动到某一屏后的回调函数，接收 anchorLink 和 index 两个参数，anchorLink 是锚链接的名称，index 是序号，从1开始计算</td></tr><tr><td style="text-align:center">onLeave</td><td style="text-align:center">滚动前的回调函数，接收 index、nextIndex 和 direction 3个参数：index 是离开的“页面”的序号，从1开始计算；</td></tr><tr><td style="text-align:center">nextIndex</td><td style="text-align:center">是滚动到的“页面”的序号，从1开始计算；</td></tr><tr><td style="text-align:center">direction</td><td style="text-align:center">判断往上滚动还是往下滚动，值是 up 或 down。</td></tr><tr><td style="text-align:center">afterRender</td><td style="text-align:center">页面结构生成后的回调函数，或者说页面初始化完成后的回调函数</td></tr><tr><td style="text-align:center">afterSlideLoad</td><td style="text-align:center">滚动到某一水平滑块后的回调函数，与 afterLoad 类似，接收 anchorLink、index、slideIndex、direction 4个参数</td></tr><tr><td style="text-align:center">onSlideLeave</td><td style="text-align:center">某一水平滑块滚动前的回调函数，与 onLeave 类似，接收 anchorLink、index、slideIndex、direction 4个参数</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jQuery" scheme="https://blog.chuyuxuan.top/tags/jQuery/"/>
    
      <category term="fullpage" scheme="https://blog.chuyuxuan.top/tags/fullpage/"/>
    
  </entry>
  
  <entry>
    <title>关于的jQuery小知识以及碎碎念</title>
    <link href="https://blog.chuyuxuan.top/2020/04/06/%E5%89%8D%E7%AB%AF/jQuery%E5%85%A5%E9%97%A8/"/>
    <id>https://blog.chuyuxuan.top/2020/04/06/%E5%89%8D%E7%AB%AF/jQuery%E5%85%A5%E9%97%A8/</id>
    <published>2020-04-06T13:00:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="碎碎念"><a class="markdownIt-Anchor" href="#碎碎念"></a> 碎碎念</h1><p>是的，很多人认为<code>jQuery</code>并不是一个好用的框架，像什么<code>Vue</code>啊，<code>React</code>啊，<code>Angular</code>啊，这些才算的上一个高大上的框架。但是，存在还是有一定的道理的，就像是没有jQuery这样的简化JavaScript的框架，当作<code>前浪</code>，vue等后面框架的面世，还是需要一点变革的。</p><p><code>那么我为什么会开始学习jQuery？</code>这个问题问得好，因为学校要求学🤣。就像学校现在还要求我们学习在现在的互联网公司不会用的<span style="border-bottom: 1px dashed #389fff;"><span class="hint--top hint--rounded hint--info" aria-label="主要是现在有更好的框架去代替，而且效率还高。" ontouchstart>过时了</span></span>的<code>jsp</code>一样。嘛~，我这不是抱怨，算是一种考古哈哈。就比如说哪一天，突然间出现了一个十分强大的前端框架，直接把我上面刚刚所说的架构全部给代替了，那么我们现在所学的，所认为的前沿框架在那个时候的人看来，不也是过时之物么？技术永远是在发展的，这里呢，我就抱着一颗虔诚之心🧡，好好的把学校里安排的知识给稍微美化整理一下。那么，开始嘻嘻！<br>===<mark><mark><mark><mark><mark><mark><mark>我是分界线</mark></mark></mark></mark></mark></mark></mark></p><h1 id="jquery入门"><a class="markdownIt-Anchor" href="#jquery入门"></a> jQuery入门</h1><h2 id="1-环境安装"><a class="markdownIt-Anchor" href="#1-环境安装"></a> 1. 环境安装</h2><p>安装环境是使用<code>jQuery</code>的第一步，如果你需要在本地运行jQuery，可以查看<a href="https://jquery.com/" target="_blank" rel="noopener">官网</a>来安装jQuery库。这里推荐使用官方定制的CDN进行引入，当然，这在网上是可以搜寻到的。</p><h2 id="2-第一个程序"><a class="markdownIt-Anchor" href="#2-第一个程序"></a> 2. 第一个程序</h2><p>在<code>&lt;div id=&quot;box&quot;&gt;&lt;/div&gt;</code>里填充内容<code>hello,jquery</code>。实现的效果。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image001.gif" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" title="1" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image001.gif" class="lazyload"></a></p><p>这里用<code>javascript</code>先实现一下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line">box.innerHTML = <span class="string">"hello,jquery"</span>;</span><br></pre></td></tr></table></figure></div><p>用<code>jQuery</code>实现会更简单，下面每一步都和上面的相对应，实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box = $(<span class="string">"#box"</span>);</span><br><span class="line">box.html(<span class="string">"hello,jquery"</span>);</span><br></pre></td></tr></table></figure></div><p>从上面可以看出：</p><ul><li><p><code>$(&quot;#box&quot;)</code>是获取到<code>id=&quot;box&quot;</code>的<code>div</code></p></li><li><p><code>html()</code>方法是获取元素的内容（包括HTML标记）， <code>()</code>里面没有内容表示获取，有内容表示赋值。</p></li></ul><p>基本语法：</p><pre><code> $(selector).action()</code></pre><p>说明:</p><ul><li><code>jQuery</code>用美元符号<code>$</code>定义；</li><li><code>selector</code>表示要操作的<code>dom</code>元素；</li><li><code>action</code>表示要执行的操作。</li></ul><h2 id="3-基本选择器"><a class="markdownIt-Anchor" href="#3-基本选择器"></a> 3. 基本选择器</h2><p>和<code>CSS</code>一样，<code>jQuery</code>也有基本选择器，我们先来看一下源码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box1"</span>&gt;我是id选择器&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;p class="box2"&gt;&lt;/</span>p&gt;</span><br><span class="line">&lt;span&gt;&lt;<span class="regexp">/span&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="id选择器"><a class="markdownIt-Anchor" href="#id选择器"></a> id选择器</h3><p>对于上面 <code>id=&quot;box1&quot;</code>的<code>div</code>，用<code>jquery</code>实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box1 = $(<span class="string">"#box1"</span>);</span><br><span class="line">box1.html();</span><br></pre></td></tr></table></figure></div><p>效果如下（下面div获取上面div的内容）：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image003.gif" data-fancybox="group" data-caption="2" class="fancybox"><img alt="2" title="2" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image003.gif" class="lazyload"></a><br>从上面可以看出，id选择器语法：</p><pre><code>$(&quot;# + idName&quot;)</code></pre><p>这里再提醒一下：<br><code>html()：</code>里的 <code>()</code>里有内容，表示往该元素添加内容，没有内容，表示获取内容。</p><h3 id="类选择器"><a class="markdownIt-Anchor" href="#类选择器"></a> 类选择器</h3><p>对于上面<code>class=&quot;box2&quot;</code>的 <code>p</code>， 用<code>jQuery</code> 实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box2 = $(<span class="string">".box2"</span>);</span><br><span class="line">box2.html(<span class="string">"我是类选择器"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image004.gif" data-fancybox="group" data-caption="3" class="fancybox"><img alt="3" title="3" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image004.gif" class="lazyload"></a><br>从上面可以看出,类选择器语法：</p><pre><code>$(&quot;. + className&quot;)</code></pre><h3 id="元素选择器"><a class="markdownIt-Anchor" href="#元素选择器"></a> 元素选择器</h3><p>对于上面 <code>&lt;span&gt;&lt;/span&gt;</code>， 用<code>jQuery</code>实现如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> box3 = $(<span class="string">"span"</span>);</span><br><span class="line">box3.html(<span class="string">"我是元素选择器"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image005.gif" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image005.gif" class="lazyload"></a></p><p>从上面可以看出,元素选择器语法：</p><pre><code>$(&quot;tagName&quot;)</code></pre><h3 id="过滤选择器重点"><a class="markdownIt-Anchor" href="#过滤选择器重点"></a> 过滤选择器(重点)</h3><p>例如，现有代码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>第二个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>第三个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第四个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>第五个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>第六个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>基础效果图如下：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image010.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image010.png" class="lazyload"></a></p><p>现在分别获取获取指定的<code>li</code>元素，并添加相应的背景色。</p><ul><li>获取<strong>第一个</strong><code>li</code>标签，添加背景色<code>orange</code>：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:first"</span>).css(<span class="string">"background"</span>,<span class="string">"orange"</span>)</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">+ 获取最**后一个**`</span>li<span class="string">`标签，添加背景色`</span>green<span class="string">` :</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>js</span><br><span class="line">$(<span class="string">"li:last"</span>).css(<span class="string">"background"</span>,<span class="string">"green"</span>)；</span><br><span class="line"><span class="string">``</span><span class="string">` </span></span><br><span class="line"><span class="string">效果图如下：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">![](https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image012.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">- 获取下标为`偶数`的li标签，添加背景色`#ccc`：</span><br><span class="line"><span class="string">``</span><span class="string">`js</span></span><br><span class="line"><span class="string">$("li:even").css("background","#eee");</span></span><br></pre></td></tr></table></figure></div><ul><li>获取下标为<code>奇数</code>的li标签，添加背景色<code>#ccc</code>:</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:odd"</span>).css(<span class="string">"background"</span>,<span class="string">"#ccc"</span>);</span><br></pre></td></tr></table></figure></div><p>效果图如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image014.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image014.png" class="lazyload"></a></p><p><strong>注：下标是从0开始的，li标签第一个下标是0，是偶数，所以背景色是&quot;#eee&quot;。</strong></p><h4 id="eq选择器"><a class="markdownIt-Anchor" href="#eq选择器"></a> <code>:eq</code>选择器</h4><ul><li>获取指定序号的元素<br>例如，现有一下代码：</li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>第一个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>第二个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span>&gt;</span>第三个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image019.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image019.png" class="lazyload"></a></p><p>实现<code>第二个li标签</code>背景色为红色.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:eq(1)"</span>).css(<span class="string">"background"</span>,<span class="string">"red"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">"li"</span>).eq(<span class="number">1</span>).css(<span class="string">"background"</span>,<span class="string">"red"</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//eq 选择器的下标是从0开始</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image021.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image021.png" class="lazyload"></a></p><h4 id="not选择器"><a class="markdownIt-Anchor" href="#not选择器"></a> :not选择器</h4><p>倘若我们要实现这样的效果：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image025.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image025.png" class="lazyload"></a></p><p>第<code>四个li标签</code>的右侧<code>没有外边距</code>,<code>not选择器</code>，它选取<code>除了指定元素以外</code>的所有元素:</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"li:not(:last)"</span>).css(<span class="string">"margin-right"</span>,<span class="string">"20px"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image026.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image026.png" class="lazyload"></a></p><h3 id="层次选择器"><a class="markdownIt-Anchor" href="#层次选择器"></a> 层次选择器</h3><p>有如下代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>第一个p标签下的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>第一个p标签下的第二个span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">i</span>&gt;</span>i标签<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>第二个p标签下的span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>若想要获取到上面<code>第一个p标签</code>下所有的<code>span</code>标签,可以按照以下步骤：</p><ol><li><p>获取到类<em>container</em>：<code>$(&quot;.container&quot;);</code></p></li><li><p>获取到<em>container</em>下第一个<em>p</em>标签：<code>$(&quot;.container p:first&quot;);</code></p></li><li><p>获取到第一个p标签下所有的<em>span</em>标签：<code>$(&quot;.container p:first span&quot;)</code>。</p></li></ol><p><strong>层次选择器和Dom结构是相匹配的.</strong></p><h3 id="show与hide"><a class="markdownIt-Anchor" href="#show与hide"></a> show()与hide()</h3><p>有如下代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"toggle"</span>&gt;</span>错误提醒<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>展示的内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>对于<code>类toggle</code>，有错误时需要出现，解决了错误需要隐藏。</p><ul><li><p>出现：$(&quot;.toggle&quot;).show()</p><p>相当于css中的<code>display:block;</code></p></li><li><p>隐藏：$(&quot;.toggle&quot;).hide()</p><p>相当于css中的 <code>display:none;</code></p></li></ul><h3 id="类的添加和删除"><a class="markdownIt-Anchor" href="#类的添加和删除"></a> 类的添加和删除</h3><p>有如下代码：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">   /</span><span class="regexp">/假如要给div添加类active和btn</span></span><br><span class="line"><span class="regexp">   active&#123; background: orange;&#125;</span></span><br><span class="line"><span class="regexp">btn&#123;&#125;</span></span><br></pre></td></tr></table></figure></div><p>假如要给div添加类<code>active</code>和<code>btn</code>,这里用<code>addClass()</code>方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).addClass(<span class="string">"active btn"</span>);</span><br></pre></td></tr></table></figure></div><p>现在要删除一个类btn，这里用removeClass()方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).removeClass(<span class="string">"btn"</span>);</span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure></div><h2 id="4-设置css属性"><a class="markdownIt-Anchor" href="#4-设置css属性"></a> 4. 设置css属性</h2><h3 id="设置单个属性"><a class="markdownIt-Anchor" href="#设置单个属性"></a> 设置单个属性</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"single"</span>&gt;设置单个属性&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></div><p>如果给上面的<code>div</code>标签添加<code>css</code>属性：<code>background：orange;</code>对于<code>div</code>标签，用jQuery可以这样写：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#single"</span>).css(<span class="string">"background"</span>,<span class="string">"orange"</span>);</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image008.gif" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image008.gif" class="lazyload"></a></p><p>这是设置单个属性常用的方法。语法总结如下：</p><pre><code>$(selector).css(attr,value);</code></pre><h3 id="设置多个属性"><a class="markdownIt-Anchor" href="#设置多个属性"></a> 设置多个属性</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"more"</span>&gt;设置多个属性&lt;<span class="regexp">/p&gt;</span></span><br></pre></td></tr></table></figure></div><p>如果给上面的<code>p</code>标签添加<code>css</code>属性：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">css</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"<span class="selector-tag">background</span>"<span class="selector-pseudo">:"</span><span class="selector-id">#ccc</span>";</span><br><span class="line">"<span class="selector-tag">text-align</span>"<span class="selector-pseudo">:"center"</span>;</span><br><span class="line">"<span class="selector-tag">line-height</span>"<span class="selector-pseudo">:"40px"</span>;</span><br></pre></td></tr></table></figure></div><p>对于<code>p</code>标签，用上面的方法一条一条的写，也是可以的，但是比较麻烦，下面是设置多个css属性的方法：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".more"</span>).css(&#123;</span><br><span class="line"><span class="string">"background"</span>:<span class="string">"#ccc"</span>,</span><br><span class="line"><span class="string">"text-align"</span>:<span class="string">"center"</span>,</span><br><span class="line"><span class="string">"line-height"</span>:<span class="string">"40px"</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image009.gif" data-fancybox="group" data-caption="5" class="fancybox"><img alt="5" title="5" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/jQuery/image009.gif" class="lazyload"></a></p><p>可以看出，设置多个css属性是用对象的方式来实现的。语法总结如下:</p><pre><code>$(selector).css({attr1: value1,attr2: value2,...})</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="jQuery" scheme="https://blog.chuyuxuan.top/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>CSS框架思维导图</title>
    <link href="https://blog.chuyuxuan.top/2020/03/30/%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CSS%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/"/>
    <id>https://blog.chuyuxuan.top/2020/03/30/%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CSS%E7%9F%A5%E8%AF%86%E6%A1%86%E6%9E%B6/</id>
    <published>2020-03-30T02:00:35.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="把css各个知识体系稍微串了一下花的时间要多余html"><a class="markdownIt-Anchor" href="#把css各个知识体系稍微串了一下花的时间要多余html"></a> 把css各个知识体系稍微串了一下，花的时间要多余html.🤪</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/CSS.svg" data-fancybox="group" data-caption="svg" class="fancybox"><img alt="svg" title="svg" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/CSS.svg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="CSS" scheme="https://blog.chuyuxuan.top/tags/CSS/"/>
    
      <category term="框架" scheme="https://blog.chuyuxuan.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>html框架思维导图</title>
    <link href="https://blog.chuyuxuan.top/2020/03/26/%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/html/"/>
    <id>https://blog.chuyuxuan.top/2020/03/26/%E5%89%8D%E7%AB%AF/CSS/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/html/</id>
    <published>2020-03-26T09:49:35.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="稍微抽个时间把html各个知识体系串了一下虽然不全但是可用"><a class="markdownIt-Anchor" href="#稍微抽个时间把html各个知识体系串了一下虽然不全但是可用"></a> 稍微抽个时间把html各个知识体系串了一下，虽然不全，但是可用</h1><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/html_framework.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/CSS/html_framework.jpg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="html" scheme="https://blog.chuyuxuan.top/tags/html/"/>
    
      <category term="思维导图" scheme="https://blog.chuyuxuan.top/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Javascript对象相关</title>
    <link href="https://blog.chuyuxuan.top/2020/03/21/%E5%89%8D%E7%AB%AF/js%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/"/>
    <id>https://blog.chuyuxuan.top/2020/03/21/%E5%89%8D%E7%AB%AF/js%E7%9A%84%E5%AF%B9%E8%B1%A1%E7%9B%B8%E5%85%B3/</id>
    <published>2020-03-21T01:30:00.000Z</published>
    <updated>2021-03-08T14:24:42.177Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>JavaScript是一种基于对象<code>（Object-based）</code>的语言，在JavaScript中，对象的创建和Java不同，既有Java使用的构造函数方式，也有其他方法。</p><h1 id="对象的定义"><a class="markdownIt-Anchor" href="#对象的定义"></a> 对象的定义</h1><p>JavaScript中的**一切都是对象，**这是该语言的一个很大的特点。像字符串、数组等已经定义的对象叫做<code>内置对象</code>。用户自己也可以定义对象，叫做<code>自定义对象</code>。自定义对象指数据和函数（又叫方法）的集合。数据指变量名和变量的值构成的组合。如下图所示：<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/1.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/1.png" class="lazyload"></a><br>下面介绍五种创建对象的方法，其中通过对象字面量和使用构造函数创建对象最常用。</p><h2 id="对象字面量"><a class="markdownIt-Anchor" href="#对象字面量"></a> 对象字面量</h2><p>这是<code>最常用</code>的创建对象的方法，通过新建一个键值对的集合（对象字面量）创建对象，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> song = &#123;</span><br><span class="line">    name:<span class="string">"Liekkas"</span>,</span><br><span class="line">      time:<span class="number">180</span>,</span><br><span class="line">      <span class="string">"song language"</span>:English,</span><br><span class="line">      singer: &#123;</span><br><span class="line">        singerName:<span class="string">"Sofia Jannok"</span>,</span><br><span class="line">            singerAge:<span class="number">30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><p>键值对中的键指的是属性的名字，若其中含有空格，名字需要用双引号包含在内。值指的是属性的值，可以是基本类型：如字符串，数字，布尔型，也可以是一个对象。键值对之间用逗号隔开，最后一个键值对后面没有逗号，所有的键值对在一个大括号中。</p><h2 id="通过关键字new创建对象"><a class="markdownIt-Anchor" href="#通过关键字new创建对象"></a> 通过关键字new创建对象</h2><p>通过<code>new</code>关键字创建对象也是一个常用的方法。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Store = <span class="keyword">new</span> <span class="built_in">Object</span>();<span class="comment">//创建对象的一个实例</span></span><br><span class="line">Store.name = <span class="string">"lofo Market"</span>;</span><br><span class="line">Store.location = <span class="string">"NO.13 Five Avenue"</span>;</span><br><span class="line">Store.salesVolume = <span class="number">1000000</span>;</span><br></pre></td></tr></table></figure></div><p>通过上面的代码，我们就能创建一个名为<code>Store</code>的对象。</p><h2 id="通过工厂方法创建对象"><a class="markdownIt-Anchor" href="#通过工厂方法创建对象"></a> 通过工厂方法创建对象</h2><p>工厂方法就是通过<code>函数创建对象</code>，函数封装了创建对象的过程。<br>这是一种通过函数创建对象的方法，函数封装了对象的创建过程，创建新对象时只需要调用该函数即可。这种方法<strong>适合于一次创建多个对象</strong>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象的创建函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createStoreObject</span>(<span class="params">name,location,salesVolume</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> store = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">    store.name = name;</span><br><span class="line">    store.locaion = location;</span><br><span class="line">    store.salesVolume = salesVolume;</span><br><span class="line">    store.display = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> store;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用该函数创建一个对象</span></span><br><span class="line"><span class="keyword">var</span> store1 = createStoreObject(<span class="string">"panda express"</span>,<span class="string">"No.1,People Street"</span>,<span class="number">200000</span>);</span><br></pre></td></tr></table></figure></div><p>这样就创建了一个名为<code>store1</code>的对象，注意这个对象除了属性之外还有一个方法<code>display</code>。要创建更多的类似store1的对象，直接<strong>调用该函数</strong>即可。</p><h2 id="使用构造函数创建对象"><a class="markdownIt-Anchor" href="#使用构造函数创建对象"></a> 使用构造函数创建对象</h2><p>上面虽然也是通过函数创建对象，但不是构造函数，只是普通函数。<strong>构造函数名必须以<code>大写字母</code>开头，函数体内没有返回语句</strong>。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Store</span>(<span class="params">name,location,salesVolume</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.locaion = location;</span><br><span class="line">    <span class="keyword">this</span>.salesVolume = salesVolume;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建对象的实例</span></span><br><span class="line"><span class="keyword">var</span> myStore = <span class="keyword">new</span> Store(<span class="string">"KeyExp"</span>,<span class="string">"No.1,L.Street"</span>,<span class="number">540000</span>);</span><br></pre></td></tr></table></figure></div><p>上面的代码首先是<code>Store</code>对象的<code>构造函数</code>，然后用该构造函数<strong>创建了Store对象的一个实例myStore</strong>。</p><p><span id="jump"> </span></p><h2 id="使用原型prototype创建对象"><a class="markdownIt-Anchor" href="#使用原型prototype创建对象"></a> 使用原型(prototype)创建对象</h2><p>当我们创建一个函数时，函数就会自动拥有一个<a href="https://baike.baidu.com/item/prototype/14335187?fr=aladdin" target="_blank" rel="noopener">prototype</a>属性，这个属性的值是一个对象，这个对象被称为该函数的原型对象。也可以叫做原型。</p><p>当用new关键字加函数的模式创建一个对象时，这个对象就会有一个默认的不可见的属性<code>Prototype</code>，该属性的值就是上面提到的原型对象。如下图所示：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/2.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/2.png" class="lazyload"></a></p><p>JavaScript中每个对象都有一个属性<code>Prototype</code>，指向它的原型对象，该原型对象又具有一个自己的<code>Prototype</code>，层层向上直到一个对象的原型为<code>null</code>。根据定义，null 没有原型，并作为这个原型链中的<strong>最后一个环节</strong>。如下图所示：</p><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/3.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/javascript/3.png" class="lazyload"></a></p><div class="note danger">            <p>这种方法是对使用构造函数创建对象的改进，使用构造函数创建一个对象时，会把构造函数中的方法（上面的构造函数只有属性的键值对，没有方法）都创建一遍，浪费内存，使用原型不存在这个问题。</p>          </div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Store</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">Store.prototype.name = <span class="string">"SF Express"</span>;</span><br><span class="line">Store.prototype.locaion = <span class="string">"Hong Kong"</span>;</span><br><span class="line">Store.prototype.salesVolume = <span class="number">1200000000</span>;</span><br><span class="line"><span class="comment">//创建对象</span></span><br><span class="line"><span class="keyword">var</span> myStore = <span class="keyword">new</span> Store();</span><br><span class="line"><span class="comment">//创建一个新的对象</span></span><br><span class="line"><span class="keyword">var</span> hisStore = <span class="keyword">new</span> Store();</span><br><span class="line">hisStore.name = <span class="string">"STO Express"</span>;<span class="comment">//覆盖了原来的name属性</span></span><br></pre></td></tr></table></figure></div><p>这种方法的好处是，创建一个新的对象时，可以<strong>更改部分属性的值</strong>。</p><h1 id="js-类的增删改查"><a class="markdownIt-Anchor" href="#js-类的增删改查"></a> JS <code>类</code>的增删改查</h1><p>在Java中，当实体类建立以后，类的属性只能获取与修改，不能增加与删除。但是因为<strong>JavaScript是动态类型的语言</strong>，JavaScript中对象的属性具有增删改查所有的操作。</p><h2 id="属性的获取"><a class="markdownIt-Anchor" href="#属性的获取"></a> 属性的获取</h2><h3 id="方式一"><a class="markdownIt-Anchor" href="#方式一"></a> 方式一</h3><p>属性的获取有两种方式，一种是使用.符号，符号左侧是对象的名字，符号右侧是属性的名字，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;<span class="attr">name</span>:<span class="string">"Alice"</span>,<span class="attr">gender</span>:<span class="string">"girl"</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(student.name);<span class="comment">//输出Alice</span></span><br></pre></td></tr></table></figure></div><p>这种情况下<strong>属性名必须是静态的字符串</strong>，即不能是通过计算或者字符串的拼接形成的字符串。</p><h3 id="方式二"><a class="markdownIt-Anchor" href="#方式二"></a> 方式二</h3><p>另外一种是使用<code>&quot;&quot;</code>双引符号，符号的左边是对象的名字，双引号中间是属性的名字，这种情况下属性名可以是一个表达式，只要表达式的值是一个字符串即可。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;<span class="attr">name</span>:<span class="string">"Alice"</span>,<span class="attr">gender</span>:<span class="string">"girl"</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(student[<span class="string">"name"</span>]);<span class="comment">//输出Alice</span></span><br></pre></td></tr></table></figure></div><p>有两种情况必须使用第二种方式：</p><ul><li><p>属性名含有空格字符，如student[“first name”]，这时不能用student.first name代替，编译器无法解释后者；</p></li><li><p>属性名动态生成，比如用for循环获取前端连续id的值，这种id名之间一般有特定关系。如下面的例子：</p></li></ul><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(int i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i ++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(student[<span class="string">"id"</span>+i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="属性的修改与新增"><a class="markdownIt-Anchor" href="#属性的修改与新增"></a> 属性的修改与新增</h2><p>属性的修改指修改已有属性的值，这个直接用赋值符号即可。</p><p><em>属性的新增与修改在形式上完全相同，区别仅在于编译器会根据属性的名字判断是否有该属性，有则修改，没有则新增。</em></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> student = &#123;</span><br><span class="line">    name:<span class="string">"Kim"</span>,</span><br><span class="line">    age:<span class="number">21</span></span><br><span class="line">&#125;;</span><br><span class="line">student.age = <span class="number">20</span>;<span class="comment">//修改属性，覆盖了原来的值21</span></span><br><span class="line">student.gender = <span class="string">"female"</span>;<span class="comment">//新增属性gender</span></span><br></pre></td></tr></table></figure></div><h2 id="删除属性"><a class="markdownIt-Anchor" href="#删除属性"></a> 删除属性</h2><p>JavaScript中的属性还可以删除，这在其他的面向对象语言如Java或者C++中是无法想象的，删除通过<code>delete</code>运算符实现。</p><div class="note danger">            <p><strong>删除成功返回布尔型true，删除失败也是返回true，所以在删除之前需要判断一个属性是否存在.</strong></p><h4><font face="华文行楷" color="#993366">看下面的属性</font></h4>          </div><p>需要注意的是，<em>对象只能删除自己特有的属性，而不能删除继承自原型对象的属性</em>。同时，对象在删除属性时，要防止删除被其他对象继承的属性，因为这样会导致程序出错。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Store = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">Store.name = <span class="string">"lofo Market"</span>;</span><br><span class="line">Store.location = <span class="string">"NO.13 Five Avenue"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> Store.name);<span class="comment">//删除成功，输出true</span></span><br><span class="line"><span class="built_in">console</span>.log(Store.name);<span class="comment">//已删除，返回undefined</span></span><br><span class="line"><span class="keyword">delete</span> Store.prototype;<span class="comment">//删除失败，非自有属性</span></span><br></pre></td></tr></table></figure></div><h3 id="判断属性是否存在"><a class="markdownIt-Anchor" href="#判断属性是否存在"></a> 判断属性是否存在</h3><p>属性的检测指检查对象是否有某个属性或者方法，需要使用运算符<code>in</code>.</p><div class="note danger">            <ul><li><code>in</code>的左侧是属性或者方法名，右侧是检查对象，对象有该属性或者方法则返回true，否则返回false.</li></ul>          </div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">    name:<span class="string">"SJTU"</span>,</span><br><span class="line">    location:<span class="string">"ShangHai"</span>,</span><br><span class="line">    studentNum:<span class="number">40000</span>,</span><br><span class="line">    display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//检测属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"name"</span> <span class="keyword">in</span> school);<span class="comment">//输出true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"sales"</span> <span class="keyword">in</span> school);<span class="comment">//输出false</span></span><br><span class="line"><span class="comment">//检测方法</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"display"</span> <span class="keyword">in</span> school);<span class="comment">//输出true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"print"</span> <span class="keyword">in</span> school);<span class="comment">//输出false</span></span><br></pre></td></tr></table></figure></div><p><strong>这里的属性名是字符串，必须用双引号包含在内。</strong></p><p>还可以用<code>hasOwnProperty()</code>检测对象是否具有某个自有属性或方法。括号内的参数是属性或者方法的名字。</p><p>所谓自有属性或者方法，是指对象自己定义的属性或者方法，而不是从<a href="#jump">原型链</a>上继承来的。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">    name:<span class="string">"SJTU"</span>,</span><br><span class="line">    location:<span class="string">"ShangHai"</span>,</span><br><span class="line">    studentNum:<span class="number">40000</span>,</span><br><span class="line">    display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(school.hasOwnProperty(<span class="string">"studentNum"</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(school.hasOwnProperty(<span class="string">"hasOwnProperty"</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure></div><p>因为<code>hasOwnProperty方法</code>继承自<code>object</code>对象，不是自有方法，所以返回<code>false</code>。</p><h2 id="属性的枚举"><a class="markdownIt-Anchor" href="#属性的枚举"></a> 属性的枚举</h2><p>定义：属性的枚举指按顺序逐个的列出属性的名字。如下面的例子：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    name:<span class="string">"Ye"</span>,</span><br><span class="line">    gender:<span class="string">"Gril"</span>,</span><br><span class="line">    age:<span class="number">23</span>,</span><br><span class="line">    salary:<span class="number">23000</span>,</span><br><span class="line">    height:<span class="number">1.78</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>对象<code>person</code>有五个属性，所谓枚举，就是依次列出这五个属性的名字，即<code>：name、gender、age、salary、height</code>，至于它们排列的顺序，在不同的浏览器中的结果不同，这里不讨论。</p><p>在继续下面的知识点之前，首先要知道一个概念：<code>可枚举性（enumerable）</code>，这是对象的属性的一个性质，用户自己定义的属性默认为可枚举，系统内置的对象的属性默认为不可枚举。<br>枚举属性有三种方法：</p><ul><li>for…in…循环</li><li>Object.getOwnPropertyNames()</li><li>Object.keys()</li></ul><h3 id="forin循环"><a class="markdownIt-Anchor" href="#forin循环"></a> <code>for...in...</code>循环</h3><p>可以枚举所有可枚举的属性，包括继承的属性。如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先定义一个school对象，它从原型链上继承的属性都是不可枚举的，而下面自定义的四个属性或者方法都是可枚举的</span></span><br><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">  name:<span class="string">"SJTU"</span>,</span><br><span class="line">  location:<span class="string">"ShangHai"</span>,</span><br><span class="line">  studentNum:<span class="number">40000</span>,</span><br><span class="line">  display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//枚举school的属性</span></span><br><span class="line"><span class="comment">//下面的圆括号中的att表示对象的属性，school表示对象</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> att <span class="keyword">in</span> school) &#123;</span><br><span class="line">  <span class="comment">//依次输出name,location,studentNum,display</span></span><br><span class="line">  <span class="built_in">console</span>.log(att);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>圆括号里面的表达式中，<code>att</code>表示对象的属性，<code>school</code>表示该对象，这个循环将<code>依次遍历</code>对象的所有可枚举属性，<font color="red">每次输出一个属性的值。</font> <font size="1" color="#4fe000">我刚被这个坑惨了，怪我自己没仔细阅读。 </font></p><h3 id="objectgetownpropertynames"><a class="markdownIt-Anchor" href="#objectgetownpropertynames"></a> Object.getOwnPropertyNames()</h3><p>括号中有一个参数，是要枚举的对象。该表达式将返回对象的所有自有属性的名字，<strong>不区分是否可枚举</strong>，结果以<code>字符串数组</code>的形式呈现，如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个school对象</span></span><br><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">  name:<span class="string">"SJTU"</span>,</span><br><span class="line">  location:<span class="string">"ShangHai"</span>,  </span><br><span class="line">     studentNum:<span class="number">40000</span>,</span><br><span class="line">  display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//为school对象增加一个不可枚举的属性range</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(school, <span class="string">"range"</span>, &#123;</span><br><span class="line">  value: <span class="number">4</span>,<span class="comment">//设置range属性的值</span></span><br><span class="line">  enumerable: <span class="literal">false</span><span class="comment">//设置range属性为不可枚举</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//输出["name","location","studentNum","display","range"]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyNames(school));</span><br></pre></td></tr></table></figure></div><p>如果用上面的<code>for...in...</code>循环，<code>range属性</code>是不能够枚举到的。</p><h3 id="objectkeys"><a class="markdownIt-Anchor" href="#objectkeys"></a> Object.keys()</h3><p>括号中有一个参数，是要枚举的对象。该表达式<code>返回可枚举的自有属性</code>，以<code>字符串数组</code>的形式。<strong>所以这里对属性的要求更加严格，既要求是自有属性，又要求可枚举。</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> school = &#123;</span><br><span class="line">  name:<span class="string">"SJTU"</span>,</span><br><span class="line">  location:<span class="string">"ShangHai"</span>,</span><br><span class="line">  studentNum:<span class="number">40000</span>,</span><br><span class="line">  display:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//为school对象增加一个不可枚举的属性range</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(school, <span class="string">"range"</span>, &#123;</span><br><span class="line">  value: <span class="number">4</span>,<span class="comment">//设置range属性的值</span></span><br><span class="line">  enumerable: <span class="literal">false</span><span class="comment">//设置range属性为不可枚举</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//输出["name","location","studentNum","display"]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(school));</span><br></pre></td></tr></table></figure></div><p>总结一下上面三个方法对属性是否自有，是否可枚举的要求：</p><table><thead><tr><th style="text-align:center">方法名</th><th style="text-align:center">是否要求可枚举</th><th style="text-align:center">是否要求自有</th></tr></thead><tbody><tr><td style="text-align:center">for…in…</td><td style="text-align:center">是</td><td style="text-align:center">否</td></tr><tr><td style="text-align:center">Object.getOwnPropertyNames()</td><td style="text-align:center">否</td><td style="text-align:center">是</td></tr><tr><td style="text-align:center">Object.keys()</td><td style="text-align:center">是</td><td style="text-align:center">是</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Javascript" scheme="https://blog.chuyuxuan.top/tags/Javascript/"/>
    
      <category term="JS对象" scheme="https://blog.chuyuxuan.top/tags/JS%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Vue小基础大集合</title>
    <link href="https://blog.chuyuxuan.top/2020/03/21/%E5%89%8D%E7%AB%AF/vue%E5%A4%A7%E8%87%B4%E9%A1%B9%E7%9B%AE/"/>
    <id>https://blog.chuyuxuan.top/2020/03/21/%E5%89%8D%E7%AB%AF/vue%E5%A4%A7%E8%87%B4%E9%A1%B9%E7%9B%AE/</id>
    <published>2020-03-21T01:30:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="挂载"><a class="markdownIt-Anchor" href="#挂载"></a> 挂载</h1><p><strong>在写Vue之前，要引入<code>Vue.js</code>,除了下载下来，还可以使用官方的CDN加速的Vue.js:</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开发环境版本，包含了有帮助的命令行警告 </span></span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p><strong>整体格式如下</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"cn"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"tup"</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">   </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#tup'</span>,<span class="comment">//所挂载的容器ID</span></span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                        <span class="comment">//填写容器数据</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                A: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;  &#125;,</span></span><br><span class="line"><span class="actionscript">                B: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;  &#125;  <span class="comment">//可执行函数</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="v-on-事件绑定"><a class="markdownIt-Anchor" href="#v-on-事件绑定"></a> V-on 事件绑定</h1><h3 id="可以用-来代替-v-on快速绑定一般是把函数与操作标签绑定"><a class="markdownIt-Anchor" href="#可以用-来代替-v-on快速绑定一般是把函数与操作标签绑定"></a> <strong>可以用 <code>@</code>来代替 <code>v-on</code>，快速绑定一般是把<code>函数</code>与操作标签绑定。</strong></h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    body &#123;</span><br><span class="line">        background-color: rgb(15, 16, 68);</span><br><span class="line">        color: white;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#jian</span> &#123;</span></span><br><span class="line">       color: rgb(29, 207, 73);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    <span class="selector-id">#jia</span> &#123;</span></span><br><span class="line">        color: rgb(29, 207, 73);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"jian"</span> <span class="attr">value</span>=<span class="string">"减"</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>       </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"jia"</span> <span class="attr">value</span>=<span class="string">"加"</span> @<span class="attr">click</span>=<span class="string">"sub"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">'#bar'</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line">                num: 28,</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"add"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.num ++;</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                sub: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">"sub"</span>);</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.num --;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on1.png" data-fancybox="group" data-caption="1" class="fancybox"><img alt="1" title="1" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on1.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on2.png" data-fancybox="group" data-caption="2" class="fancybox"><img alt="2" title="2" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-on2.png" class="lazyload"></a></p><h1 id="v-text-值"><a class="markdownIt-Anchor" href="#v-text-值"></a> V-text 值</h1><p>###　<strong>在<code>双标签</code>中，除了在标签内添加<code>v-text</code>外，还可以用<code>插值表达式</code>：<code></code>来代替数据。</strong><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text1.png" data-fancybox="group" data-caption="3" class="fancybox"><img alt="3" title="3" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text1.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text2.png" data-fancybox="group" data-caption="4" class="fancybox"><img alt="4" title="4" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text2.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text3.png" data-fancybox="group" data-caption="5" class="fancybox"><img alt="5" title="5" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-text3.png" class="lazyload"></a></p><h1 id="v-html"><a class="markdownIt-Anchor" href="#v-html"></a> V-html</h1><h3 id="说到-v-text-就不得不说到-v-html-这两个是相辅相成的在一些值中有html的标签用-v-html-会解析而-v-text-不会解析"><a class="markdownIt-Anchor" href="#说到-v-text-就不得不说到-v-html-这两个是相辅相成的在一些值中有html的标签用-v-html-会解析而-v-text-不会解析"></a> <strong>说到 <code>v-text</code> 就不得不说到 <code>v-html</code> ，这两个是相辅相成的，在一些值中，有html的标签，用 <code>v-html</code> 会解析，而 <code>v-text</code> 不会解析.</strong></h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-html1.png" data-fancybox="group" data-caption="6" class="fancybox"><img alt="6" title="6" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-html1.png" class="lazyload"></a></p><h1 id="v-show"><a class="markdownIt-Anchor" href="#v-show"></a> V-show</h1><h3 id="扯到v-show就得说说他和v-if的藕断丝连了不过这里先说下-v-show"><a class="markdownIt-Anchor" href="#扯到v-show就得说说他和v-if的藕断丝连了不过这里先说下-v-show"></a> <strong>扯到<code>v-show</code>就得说说他和<code>v-if</code>的藕断丝连了.不过这里先说下 <code>v-show</code>.</strong></h3><p><strong>顾名思义就是让数据展示，那么它的值就是<code>布尔格式</code>的。</strong><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-show1.png" data-fancybox="group" data-caption="7" class="fancybox"><img alt="7" title="7" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-show1.png" class="lazyload"></a></p><h3 id="在-dom树-里v-show不会让元素直接从dom中消失而是将其隐藏相对于-v-for-直接操纵-dom树-它对内存的消耗是少的"><a class="markdownIt-Anchor" href="#在-dom树-里v-show不会让元素直接从dom中消失而是将其隐藏相对于-v-for-直接操纵-dom树-它对内存的消耗是少的"></a> 在 <strong><em>DOM树</em></strong> 里，<code>v-show</code>不会让元素直接从DOM中消失，而是将其隐藏，相对于 <code>v-for</code> 直接操纵 <strong><em>DOM树</em></strong> ，它对内存的消耗是少的。</h3><h1 id="v-for"><a class="markdownIt-Anchor" href="#v-for"></a> V-for</h1><h3 id="这里就直接上图看看-dom树-的一些对比"><a class="markdownIt-Anchor" href="#这里就直接上图看看-dom树-的一些对比"></a> 这里就直接上图，看看 <strong><em>DOM树</em></strong> 的一些对比。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-if1.png" data-fancybox="group" data-caption="7" class="fancybox"><img alt="7" title="7" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-if1.png" class="lazyload"></a></p><h1 id="v-bind-单向数据绑定"><a class="markdownIt-Anchor" href="#v-bind-单向数据绑定"></a> V-bind 单向数据绑定</h1><h3 id="顾名思义还有一个双向数据绑定的家伙-v-bind后面是属性名绑定之后这个属性对应的值要去vue的data中找-除了url还可以绑定图片src属性-超链接的class"><a class="markdownIt-Anchor" href="#顾名思义还有一个双向数据绑定的家伙-v-bind后面是属性名绑定之后这个属性对应的值要去vue的data中找-除了url还可以绑定图片src属性-超链接的class"></a> <strong>顾名思义，还有一个双向数据绑定的家伙。v-bind后面是<code>：属性名=</code>，绑定之后，这个属性对应的值要去vue的data中找。除了url，还可以绑定图片src属性、超链接的class.</strong></h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">'.app'</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        url:<span class="string">"https://www.baidu.com"</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">"url"</span>&gt;</span>click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"> <span class="comment">&lt;!-- v-bind 可缩写成冒号，例如下面 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span>click<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind1.png" data-fancybox="group" data-caption="8" class="fancybox"><img alt="8" title="8" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind1.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind2.png" data-fancybox="group" data-caption="9" class="fancybox"><img alt="9" title="9" data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Vue/v-bind2.png" class="lazyload"></a></p><h1 id="v-molde-数据双向绑定"><a class="markdownIt-Anchor" href="#v-molde-数据双向绑定"></a> V-molde 数据双向绑定</h1><h3 id="vue中经常使用到input和textarea这类表单元素使用v-model实现这些标签数据的双向绑定它会根据控件类型自动选取正确的方法来更新元素-v-molde其实是语法糖"><a class="markdownIt-Anchor" href="#vue中经常使用到input和textarea这类表单元素使用v-model实现这些标签数据的双向绑定它会根据控件类型自动选取正确的方法来更新元素-v-molde其实是语法糖"></a> vue中经常使用到<code>input</code>和<code>textarea</code>这类表单元素，使用v-model实现这些标签数据的双向绑定，它会根据控件类型自动选取正确的方法来更新元素。V-molde其实是<a href="https://baike.baidu.com/item/%E8%AF%AD%E6%B3%95%E7%B3%96/5247005?fr=aladdin" target="_blank" rel="noopener">语法糖</a>.</h3><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入姓名"</span> <span class="attr">v-model</span>=<span class="string">"name"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line">        data() &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">                name: <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="讲大白话的一点就是同步更新vue从它的数组里拿东西然后用户输入的东西同样会存入到数组中会改变数组里面的值-浏览器又会把数组里的值同步渲染到页面中-这里附上一个小的demo-当然也会用到v-for的指令-待会儿再来一起呈现"><a class="markdownIt-Anchor" href="#讲大白话的一点就是同步更新vue从它的数组里拿东西然后用户输入的东西同样会存入到数组中会改变数组里面的值-浏览器又会把数组里的值同步渲染到页面中-这里附上一个小的demo-当然也会用到v-for的指令-待会儿再来一起呈现"></a> 讲大白话的一点，就是同步更新，vue从它的数组里拿东西，然后用户输入的东西同样会存入到数组中，会改变数组里面的值。浏览器又会把数组里的值同步渲染到页面中。这里附上一个小的demo。当然，也会用到<code>V-for</code>的指令。待会儿再来一起呈现。</h3><h1 id="v-for-迭代"><a class="markdownIt-Anchor" href="#v-for-迭代"></a> V-for 迭代</h1><h3 id="本质上就是for循环在vue中可以方便的把数据给列举取出来用在数组上用的最多-v-for基本语法为"><a class="markdownIt-Anchor" href="#本质上就是for循环在vue中可以方便的把数据给列举取出来用在数组上用的最多-v-for基本语法为"></a> 本质上就是for循环，在Vue中可以方便的把数据给列举取出来，用在数组上用的最多。<code>v-for</code>基本语法为：</h3><pre><code>    （item,index）in 'data'    //这里item表示每一项，index表示索引。具体看下列代码：</code></pre><p>注：只是实现了基本功能，对页面并没有写太多的css.</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Vue-for<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"add"</span> &gt;</span>baba<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> @<span class="attr">click</span>=<span class="string">"remove"</span> &gt;</span>ddd<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in arr"</span>&gt;</span></span><br><span class="line">                &#123;&#123;item&#125;&#125; address:&#123;&#123;index&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-for</span>=<span class="string">"item in vegetables"</span> <span class="attr">:title</span>=<span class="string">"item.name"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里就是把值给循环列举出来 --&gt;</span></span><br><span class="line">            &#123;&#123;item.name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#app"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                arr: [<span class="string">"beijing"</span>, <span class="string">"shenzheng"</span>, <span class="string">"aomeng"</span>, <span class="string">"changsha"</span>],</span></span><br><span class="line"><span class="actionscript"><span class="comment">//这里是循环的数组</span></span></span><br><span class="line">                vegetables: [&#123;</span><br><span class="line"><span class="actionscript">                        name: <span class="string">"i am handsome!"</span></span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="actionscript">                        name: <span class="string">"some one like my handsome!"</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.vegetables.push(&#123;</span></span><br><span class="line"><span class="actionscript">                        name: <span class="string">"wo shi ni baba !"</span><span class="comment">//push 推入到vegetable数组</span></span></span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.vegetables.shift();<span class="comment">//shift 从vegetable数组移除</span></span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="阶段小结"><a class="markdownIt-Anchor" href="#阶段小结"></a> 阶段小结</h1><p>这里写了一个综合上面的所有要点的小demo.一个记事本。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Notepad<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        body &#123;</span><br><span class="line">            background: rgb(119, 201, 221);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#big_conntent</span> &#123;</span></span><br><span class="line">            height: 500px;</span><br><span class="line">            width: 500px;</span><br><span class="line">            background: rgb(119, 201, 221);</span><br><span class="line">            color: white;</span><br><span class="line">            text-align: center;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line"><span class="css">            <span class="comment">/*居中元素*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#item</span> &#123;</span></span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-id">#input</span> &#123;</span></span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 40px;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">            border-radius: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"big_conntent"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>NOTEPAD<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"conntent"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"input"</span> @<span class="attr">keyup.enter</span>=<span class="string">"add"</span> <span class="attr">v-model</span>=<span class="string">"inputV"</span> <span class="attr">placeholder</span>=<span class="string">"Please input"</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"show"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"item"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) in list"</span>&gt;</span></span><br><span class="line">                        &#123;&#123;item&#125;&#125;</span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"disdroy"</span> @<span class="attr">click</span>=<span class="string">"remove(index)"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>确认添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>共有&#123;&#123;list.length&#125;&#125;个数据<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"clear"</span>&gt;</span>一键清空<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#big_conntent"</span>,</span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="actionscript">                list: [<span class="string">"eating!"</span>, <span class="string">"sleeping!"</span>, <span class="string">"laugthing!"</span>, <span class="string">"playing!"</span>],</span></span><br><span class="line"><span class="actionscript">                inputV: <span class="string">"    I'm your father!"</span></span></span><br><span class="line">            &#125;,</span><br><span class="line">            methods: &#123;</span><br><span class="line"><span class="actionscript">                add: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputV);</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.inputV)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                remove:<span class="function"><span class="keyword">function</span><span class="params">(index)</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"Delete click"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(index);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">this</span>.list.splice(index,<span class="number">1</span>);</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="actionscript">                clear:<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span></span><br><span class="line">                &#123;</span><br><span class="line"><span class="actionscript">                    <span class="keyword">this</span>.list=[];</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.chuyuxuan.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Vue" scheme="https://blog.chuyuxuan.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL 在Win下开发环境配置</title>
    <link href="https://blog.chuyuxuan.top/2020/03/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/openGL_bulid/"/>
    <id>https://blog.chuyuxuan.top/2020/03/21/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/openGL_bulid/</id>
    <published>2020-03-21T01:30:00.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>配着玩意儿确实挺麻烦的。按着<a href="https://learnopengl-cn.github.io/01%20Getting%20started/02%20Creating%20a%20window/" target="_blank" rel="noopener"><em><code>官方文档</code></em></a>的步骤一步一步地踩了过去。当然，这里也借鉴了几位大佬的指点，终于把环境给配置好了。为了方便之后的同学，省的下载CMaKe等一堆恶心的东西，<strong>这里提供我配置好的下载包点击即可</strong><span id="jump">下载</span>。</p><p><u><a href="https://gitee.com/chuyuxuan/computer_graphic" target="_blank" rel="noopener">点此下载我配置好的环境</a></u></p><p>对了，我使用的环境为如下所示：</p><ul><li><a href="https://www.microsoft.com/zh-cn/software-download/windows10" target="_blank" rel="noopener">Window 10 x64</a></li><li><a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noopener">Visual Studio 2019</a></li></ul><p>这里提供一些编译所需要的下载链接：</p><ul><li><a href="http://www.glfw.org/download.html" target="_blank" rel="noopener">GLFW</a></li><li><a href="http://glad.dav1d.de/" target="_blank" rel="noopener">GLAD</a></li><li><a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a></li></ul><h1 id="如果你觉得还是要自己动手配置请直接往下阅读即可如果你想用我配置好的包请先下载然后u点击此处u进行跳转阅读"><a class="markdownIt-Anchor" href="#如果你觉得还是要自己动手配置请直接往下阅读即可如果你想用我配置好的包请先下载然后u点击此处u进行跳转阅读"></a> 如果你觉得还是要自己动手配置，请直接往下阅读即可，如果你想用我配置好的包，请先下载，然后<u><a href="#1">点击此处</a></u>进行跳转阅读。</h1><hr><h2 id="环境介绍"><a class="markdownIt-Anchor" href="#环境介绍"></a> 环境介绍</h2><h2 id="下载并编译glfw库"><a class="markdownIt-Anchor" href="#下载并编译glfw库"></a> 下载并编译GlFW库</h2><h3 id="1把cmake-和glfw-下载到本地并且把cmake安装好-安装就平时安装ok"><a class="markdownIt-Anchor" href="#1把cmake-和glfw-下载到本地并且把cmake安装好-安装就平时安装ok"></a> 1.把<a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a> 和<a href="http://www.glfw.org/download.html" target="_blank" rel="noopener">GLFW</a> 下载到本地，并且把<code>CMake</code>安装好。安装就平时安装OK。</h3><h3 id="2解压glfw"><a class="markdownIt-Anchor" href="#2解压glfw"></a> 2.解压<code>GlFW</code>。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.png" class="lazyload"></a></p><h3 id="3打开cmake设置source-code为glfw解压目录build目录为glfw解压目录下新建的build文件夹"><a class="markdownIt-Anchor" href="#3打开cmake设置source-code为glfw解压目录build目录为glfw解压目录下新建的build文件夹"></a> 3.打开<code>CMake</code>，设置<code>source code</code>为<code>GLFW</code>解压目录，<code>build</code>目录为<code>GLFW</code>解压目录下新建的<code>build</code>文件夹。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.png" class="lazyload"></a></p><h3 id="4configure后面的值默认即可"><a class="markdownIt-Anchor" href="#4configure后面的值默认即可"></a> 4.<code>Configure</code>，后面的值默认即可。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.png" class="lazyload"></a></p><h3 id="5然后再次点击configure并且generate"><a class="markdownIt-Anchor" href="#5然后再次点击configure并且generate"></a> 5.然后再次点击<code>Configure</code>，并且<code>Generate</code>。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030301.gif" class="lazyload"></a></p><h3 id="6完成后在build目录下生成了visual-studio的解决方案打开即可"><a class="markdownIt-Anchor" href="#6完成后在build目录下生成了visual-studio的解决方案打开即可"></a> 6.完成后，在<code>build</code>目录下生成了<code>Visual Studio的解决方案</code>，打开即可。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030305.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030305.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030306.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030306.png" class="lazyload"></a></p><h3 id="7这时在visual-studio-的buildsrcdebug目录下得到了编译好的glfw3lib库文件我们把它放好留在后面备用"><a class="markdownIt-Anchor" href="#7这时在visual-studio-的buildsrcdebug目录下得到了编译好的glfw3lib库文件我们把它放好留在后面备用"></a> 7.这时在<code>visual Studio</code> 的<code>build\src\Debug\</code>目录下，得到了编译好的<code>glfw3.lib</code>库文件，我们把它放好，留在后面备用。</h3><p><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030307.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030307.png" class="lazyload"></a></p><h2 id="下载glad库"><a class="markdownIt-Anchor" href="#下载glad库"></a> 下载<code>glad</code>库</h2><p>在浏览器中打开<a href="http://glad.dav1d.de/" target="_blank" rel="noopener">Glad在线服务页面</a> ,修改语言为<code>C/C++</code>，选择<code>OpenGL</code>，API选择使用的对应OpenGL版本(官方推荐3.3以上的)，Profile选择<code>Core</code>，勾上<code>Generate a loader</code>，点击<code>GENERATE</code>，在跳转后的界面里下载压缩好的<code>glad</code>即可。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030302.gif" class="lazyload"></a></p><h2 id="1"> 配置包</h2><ol><li>到任意盘符建立一个新的目录<code>openGL</code>，<strong>你要记得这个目录的位置</strong>，里面包含Libs和Include文件夹，将GLFW源码中的include\文件下的内容、GLFW编译后的库、下载的GLAD库，放入该新建好的目录内，配置成一个包，这样方便以后工程可以复用。如上文提到，<u><a href="#jump">(点此返回到上文下载)</a></u>，这里我已经自己做好了一个包<code>openGL_bulid</code>，下载下来解压即可。不过是否适配你的电脑就不好说了。包里的目录结构如下图所示。</li></ol><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">├─opengl32.dll  #这个要放到windows&#x2F;system32文件夹里</span><br><span class="line">├─src</span><br><span class="line">|  └glad.c      #这个是编译的，需要引入到vs里</span><br><span class="line">├─lib</span><br><span class="line">|  └glfw3.lib   #需要添加到vs</span><br><span class="line">├─include</span><br><span class="line">|    ├─KHR</span><br><span class="line">|    |  └khrplatform.h</span><br><span class="line">|    ├─GLFW</span><br><span class="line">|    |  ├─glfw3.h</span><br><span class="line">|    |  └glfw3native.h</span><br><span class="line">|    ├─glad</span><br><span class="line">|    |  └glad.h</span><br></pre></td></tr></table></figure></div><ol start="2"><li><p>Visual Studio 新建一个工程，<code>注意要选择控制台程序</code>。</p></li><li><p>配置Visual studio 新工程，<code>注意文件路径以及文件名称</code>。</p></li></ol><ul><li><p>调试 --&gt;&gt; 某某项目属性 --&gt;&gt; VC++目录 --&gt;&gt; 包含目录 --&gt;&gt; 点击会弹出一个对话框 --&gt;&gt; 然后添加刚刚配置好的包中<code>include</code>目录。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030310.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030310.png" class="lazyload"></a><br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030312.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030312.png" class="lazyload"></a></p></li><li><p>同理，库目录是添加刚刚配置好的<code>lib</code>目录。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030313.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030313.png" class="lazyload"></a></p></li><li><p>这一步是添加openGL的库，注意，需要先把包里面的<code>openGL32.dll</code>放入到<code>C:\Windows\System32</code>文件夹中，在在VC 中的 连接器–&gt;&gt; 输入–&gt;&gt; 附加依赖项 --&gt;&gt; s手动输入 <code>opengl32.lib</code>和<code>glfw3.lib</code>这两个库。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030314.png" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030314.png" class="lazyload"></a></p></li><li><p>从项目管理器中添加<code>opengl\src\glad.c</code>源文件。如图所示。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030303.gif" class="lazyload"></a></p></li></ul><p>4.编译代码并进行测试。<br>源码如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">cpp</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;glad/glad.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GLFW/glfw3.h&gt; /*这两个库的路径要填对，否则一些函数会报错*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">framebuffer_size_callback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    glfwInit();</span><br><span class="line">    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, <span class="number">3</span>);</span><br><span class="line">    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, <span class="number">3</span>);</span><br><span class="line">    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);</span><br><span class="line"></span><br><span class="line">    GLFWwindow *window = glfwCreateWindow(<span class="number">800</span>, <span class="number">600</span>, <span class="string">"LearnOpenGL"</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (window == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to create GLFW window"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        glfwTerminate();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    glfwMakeContextCurrent(window);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!gladLoadGLLoader((GLADloadproc)glfwGetProcAddress)) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">"Failed to initialize GLAD"</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, <span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line"></span><br><span class="line">    glfwSetFramebufferSizeCallback(window, framebuffer_size_callback);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (!glfwWindowShouldClose(window)) &#123;</span><br><span class="line">        glfwSwapBuffers(window);</span><br><span class="line">        glfwPollEvents();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    glfwTerminate();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">framebuffer_size_callback</span><span class="params">(GLFWwindow* window, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> </span>&#123;</span><br><span class="line">    glViewport(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>运行结果如下所示。<br><a href="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030304.gif" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://gitee.com/chuyuxuan/tuc/raw/master/Computer_Graphics/2020030304.gif" class="lazyload"></a></p><hr><h1 id="好啦大功告成接下来就开始愉快的写作业吧"><a class="markdownIt-Anchor" href="#好啦大功告成接下来就开始愉快的写作业吧"></a> 好啦！大功告成，接下来就开始愉快的写作业吧！</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="计算机图形学" scheme="https://blog.chuyuxuan.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
      <category term="openGL" scheme="https://blog.chuyuxuan.top/tags/openGL/"/>
    
      <category term="Visual studio 2019" scheme="https://blog.chuyuxuan.top/tags/Visual-studio-2019/"/>
    
  </entry>
  
  <entry>
    <title>天外有飞仙</title>
    <link href="https://blog.chuyuxuan.top/2020/03/14/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E5%A4%A9%E5%A4%96%E9%A3%9E/"/>
    <id>https://blog.chuyuxuan.top/2020/03/14/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/%E5%A4%A9%E5%A4%96%E9%A3%9E/</id>
    <published>2020-03-14T11:59:22.000Z</published>
    <updated>2021-02-08T04:12:44.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text&#x2F;css" href="https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>    <div id="aplayer-xSTmSWhS" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4874862" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="300px" data-preload="auto" data-theme="#0000"></div><!-- 选项默认值描述id必须值歌曲 id / 播放列表 id / 相册 id / 搜索关键字server必须值音乐平台: netease, tencent, kugou, xiami, baidutype必须值song, playlist, album, search, artistfixedfalse开启固定模式minifalse开启迷你模式loopall列表循环模式：all, one,noneorderlist列表播放模式： list, randomvolume0.7播放器音量lrctype0歌词格式类型listfoldedfalse指定音乐播放列表是否折叠storagenamemetingjsLocalStorage 中存储播放器设定的键名autoplaytrue自动播放，移动端浏览器暂时不支持此功能mutextrue该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停listmaxheight340px播放列表的最大长度preloadauto音乐文件预载入模式，可选项： none, metadata, autotheme#ad7a86播放器风格色彩设置 --><h1 id="天外有飞仙"><a class="markdownIt-Anchor" href="#天外有飞仙"></a> 天外有飞仙</h1><p>夜来，习惯性的打开了网易云音乐，熟练的点开了今日推荐的歌单。默默地掏出耳机，小心翼翼的将耳塞塞在耳朵里，生怕带来不和谐的杂音让耳朵感觉到这个世界的&quot;嘈杂&quot;。</p><p>双手飞舞着敲打着作业代码，没错，音乐配代码，电脑旁边放着水杯，一切都是这么静逸，一切就像往常一样。</p><p>突然间耳朵里一首前奏，猛的唤起了我脑海里深处的记忆。这熟悉又陌生的感觉，是老林的<a href="https://music.163.com/#/song?id=108254" target="_blank" rel="noopener">一眼万年</a>。</p><p>思绪飘到了小时候。放学回家，写完作业，屁颠屁颠的找着老妈给遥控器，然后坐在电视机前，守着电视里放的天外飞仙。</p><p><a href="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-MHeuCO.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-MHeuCO.jpg" class="lazyload"></a></p><p>即使我那个时候看不懂。</p><p>小学生的我为董永不能和小七在一起而骂玉皇大帝是坏人，同时也迁怒二郎神这个小跟班，枉我还学他在额头上画一只眼睛。</p><p><a href="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-03idAK.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-03idAK.jpg" class="lazyload"></a></p><p>果然，小孩子眼里只有错与对，好与坏，单纯无邪。</p><p>有时候，看似那完美无缺的爱情，不得不败在这骨感的现实面前。</p><p><a href="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-CQbggo.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="http://newimg.mingxing.com/upload/attach/2015/11-02/294186-CQbggo.jpg" class="lazyload"></a></p><p>你是仙人，而我只是一个凡人。仙人终究不能和凡人在一起的，仙人长生不老，而凡人，终究抵不过岁月消磨而老去。或许，老去的凡人是幸福的，因为它的爱人陪伴了它终生，亦或是痛苦的，因为在心爱之人前离去，剩下的，只有心爱之人的回忆。</p><p>古人终究是美好的，借用“转世”一说，续写了这凄美的爱情，歌颂着爱情。《狐妖小红娘》里的相思树，故若此吧。<br><a href="https://img.zcool.cn/community/01d3e559ffcb03a801216a4b7f62b4.jpg@1280w_1l_2o_100sh.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="https://img.zcool.cn/community/01d3e559ffcb03a801216a4b7f62b4.jpg@1280w_1l_2o_100sh.jpg" class="lazyload"></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; type=&quot;text&amp;#x2F;css&quot; href=&quot;https://cdn.jsdelivr.net/npm/hexo-tag-hint@0.2.1/css/hint.min.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; 
      
    
    </summary>
    
    
      <category term="生活日常" scheme="https://blog.chuyuxuan.top/categories/%E7%94%9F%E6%B4%BB%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="随笔" scheme="https://blog.chuyuxuan.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
